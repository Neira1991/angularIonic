var app = angular.module('AppBancocidente', ['ngRoute', 'ui.router', 'angular.filter']);
app.constant('config', configFile);
app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', function($stateProvider, $urlRouterProvider, $httpProvider) {
    $httpProvider.defaults.headers.common = {};
    $httpProvider.defaults.headers.post = {};
    $httpProvider.defaults.headers.put = {};
    $httpProvider.defaults.headers.patch = {};
    $httpProvider.interceptors.push('GeneralHttpInterceptor');
    $stateProvider
        .state('login', {
            url: '/',
            templateUrl: 'templates/login.html'
        })
        .state('Consultor', {
            url: '/consultor',
            templateUrl: 'templates/consultor/consultor.html'
        })
        .state('administrador', {
            url: '/administrador',
            templateUrl: 'templates/reportes-main.html'
        })
        .state('Consultor.Simulador', {
            url: '/simulador',
            templateUrl: 'templates/simulador/simulador.html'
        })
        .state('Consultor.tipoPrestamo', {
            url: '/prestamos',
            templateUrl: 'templates/simulador/tiposPrestamo.html'
        })
       .state('Consultor.tipoPrestamo.personal', {
            url: '/personal',
            templateUrl: 'templates/simulador/prestamoPersonal/personal.html'
        })
       .state('Consultor.tipoPrestamo.vivienda', {
            url: '/vivienda',
            templateUrl: 'templates/simulador/prestamoVivienda/vivienda.html'
        })
       .state('Consultor.tipoPrestamo.vehiculo1', {
            url: '/vehiculo1',
            templateUrl: 'templates/simulador/prestamoVehiculo/Vehiculo1/vehiculo.html'
        })
       .state('Consultor.tipoPrestamo.vehiculo2', {
            url: '/vehiculo2',
            templateUrl: 'templates/simulador/prestamoVehiculo/Vehiculo2/vehiculo.html'
        })
       .state('Consultor.tipoPrestamo.vehiculo3', {
            url: '/vehiculo3',
            templateUrl: 'templates/simulador/prestamoVehiculo/Vehiculo3/vehiculo.html'
        })
    $urlRouterProvider.otherwise('/');
}]);

app.controller('rootController', ['$state', '$template', '$scope', '$rootScope', 'User', 'Session', 'NotificacionesPush', function($state, $template, $scope, $rootScope, User, Session, NotificacionesPush) {
    var root = this;
    var States = [ "login", "Consultor", "Consultor.Simulador", "Consultor.tipoPrestamo" ];

    // var localUser = JSON.parse(localStorage.getItem("login"));
    // if(!localUser){
    //     window.location = "#/";
    // }else{
    //     $rootScope.user = localUser;
    // }
    if( !$rootScope.user ){
        window.location = "#/";
    }
    function moneyInt($n){
      $n = parseFloat($n.slice(1).replaceAll(".",""));
      return $n;
    }

    $scope.validateNumbers = function(n1,cond,n2){
      return eval(moneyInt(n1)+cond+n2);
    }

    $scope.$template = $template;
    this.previousState = '';
    this.currentState = '';
    this.user = User;

    $rootScope.title = "inicio";
    $rootScope.simulador = false;
    $scope.pages = {};
    $rootScope.pagesActive = false;
    $rootScope.pagesNumber = 0;
    //states
    $rootScope.previousState = $scope.previousState;
    $rootScope.currentState = $scope.currentState;

    $rootScope.alert = {};
    $rootScope.alert.msgAlert = false;
    $rootScope.alert.show = false;
    $rootScope.alert.check = false;
    $rootScope.load = false;

    $rootScope.nPush = {};
    $rootScope.nPush.state = false;

    $rootScope.consultorEstado = "";

    $rootScope.nPush.hide = function(){
        $rootScope.nPush.state = false;
    }

    $rootScope.prev = function(){
        var current = $state.current.name;
        var prev = States.indexOf(current) - 1;
        console.log(prev);
        if( prev >= 0 ){
            $state.go(States[prev]);
        }else{

        }
    }

    $rootScope.okmail = function () {
      $scope.$rootScope.nPush.state = true;
      $scope.$rootScope.nPush.title = "";
      $scope.$rootScope.nPush.text = "Enviado exitosamente";
      setTimeout(function () {
          $scope.$apply(function () {
              $scope.$rootScope.nPush.state = false;
              $scope.$rootScope.nPush.text = "";
          });
      }, 10000);
    };

    $rootScope.okestado = function () {
      $scope.$rootScope.nPush.state = true;
      $scope.$rootScope.nPush.title = "";
      $scope.$rootScope.nPush.text = "Se cambio exitosamente";
      setTimeout(function () {
          $scope.$apply(function () {
              $scope.$rootScope.nPush.state = false;
              $scope.$rootScope.nPush.text = "";
          });
      }, 10000);
    };

    document.addEventListener("backbutton", function(e){
        e.preventDefault();
        console.log($rootScope.consultorEstado);
        if( $state.current.name !== 'login' && $rootScope.consultorEstado !== "" ){
            // $rootScope.prev();
            angular.element(".o-main-header .a-return").trigger('click');
        }else if( $state.current.name == 'login' || $rootScope.consultorEstado == "" ){
            if( confirm("¿Desea Salir?") ){
                window.ionic.Platform.navigator.app.exitApp();
            }
        }
    }, false);

    $rootScope.fakeInputFunction = function(el){
      $(".active-now").val(el.fakeInput);
      $(".active-now").trigger('keyup keydown keypress change');
      $(".active-now").trigger('change');
    }

    $rootScope.exit = function(){
        $state.go("login");
    }

    $rootScope.cancel = function(v){
        if( typeof v == "undefined" ){
            $rootScope.alert.msgAlert = "Cancelar simulación. ¿Deseas cancelar la simulación?";
            $rootScope.alert.show = true;
            $rootScope.alert.check = true;
            mixpanel.track("Cancelacion simulacion",{
              "user": $rootScope.user.data.name,
              "email": $rootScope.user.data.email,
            });
        }else if( v == true) {
            $state.go("Consultor");
            $rootScope.alert.show = false;
            $rootScope.alert.check = false;
        }else if( v == false){
            $rootScope.alert.show = false;
            $rootScope.alert.check = false;
        }
    }

    $scope.$rootScope = $rootScope;

    document.addEventListener("deviceready", function(){

        var push = PushNotification.init({
                      "android": { "senderID": "20260794769" },
                      "ios": { "alert": "true", "badge": "true", "sound": "true"},
                      "windows": {}
                   });

        push.on('registration', function(data) {
            console.log(data);

            var notificacionesPush = NotificacionesPush
            $scope.notificacionesPush = notificacionesPush;

            $scope.notificacionesPush.send({
              "idDevice": data.registrationId,
            }).then(function(r){
                console.log(r);
            }, function (err) {
                console.log(err);
            });

        });

        push.on('notification', function(data) {
            console.log(data);
            $scope.$rootScope.nPush.state = true;
            $scope.$rootScope.nPush.title = data.title;
            $scope.$rootScope.nPush.text = data.message;
            console.log($scope);
            window.navigator.vibrate(400);
            setTimeout(function () {
                $scope.$apply(function () {
                    $scope.$rootScope.nPush.state = true;
                    $scope.$rootScope.nPush.title = data.title;
                    $scope.$rootScope.nPush.text = data.message;
                });
            }, 200);
        });

        push.on('error', function(e) {
            console.log(e);
        });

    }, false);

    $scope.$on('$stateChangeSuccess', function(ev, toState, toParams, fromState, fromParams) {

        $rootScope.previousState = fromState.name;
        $rootScope.currentState = toState.name;
        $scope.$template = $template;

    });

}]);

app.controller('adminController', ['$scope', '$template', 'Rotaciones', 'User', 'Alumnos', '$filter', '$state',function($scope, $template, Rotaciones, User, Alumnos, $filter, $state) {


}]);

// Controlador para el login
app.controller('consultorController', ['$rootScope', '$scope', '$template', 'User', '$filter', '$state', 'Registro', '$sce', '$timeout', 'PagesStatic', function($rootScope, $scope, $template, User, $filter, $state, Registro, $sce, $timeout, PagesStatic) {

  setInterval(function () {
    if( window.location.hash == "#/consultor" && $scope.n == $scope.mesActual ){
      $scope.registros();
    }
  }, 5000);

  $scope.fechaDash = moment().format('L');

  $rootScope.title = "inicio";
  $rootScope.simulador = false;
  $rootScope.pagesActive = false;
  $rootScope.alert.show = false;
  $rootScope.pagesNumber = '1/4';
  if($state.current.name == "Consultor"){
    $rootScope.load = true;
  }else{
    $rootScope.load = false;
  }
  $scope.user = $rootScope.user;
  $scope.listaCotizaciones = [];

  $scope.loadmoreScroll = false;

  $scope.pagesPost = [];
  $scope.pagesPostSelected = "";

  $scope.details = false;
  $scope.reporteLista = true;
  $scope.profile = false;
  $scope.historial = false;
  $scope.seguros = false;

  $scope.pass = {};
  $scope.listaCotizacionesHisto = {};

  $step = 0;
  $type = 0;
  $type2 = 0;

  var d = new Date();
  var n = d.getMonth();
  $scope.n = n;

  $scope.arrayMeses = [ "ENERO", "FEBRERO", 'MARZO', "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE" ];
  $scope.mesActual = n;

  $scope.menosmes = function(){
    $scope.mesActual--;
    if( $scope.mesActual < 0 ){
      $scope.mesActual = 11;
    }
    $scope.changeValues();
  }

  $scope.masmes = function(){
    $scope.mesActual++;
    if( $scope.mesActual >= 12 ){
      $scope.mesActual = 0;
    }
    $scope.changeValues();
  }

  $scope.changeValues = function(){
    var registro3 = Registro;
    $scope.registro3 = registro3;
    $rootScope.load = true;
    $scope.registro3.get({
      "IDUs": $rootScope.user.data.id,
      "Month": $scope.mesActual
    }).then(function(r) {
      $scope.TotalDesembolsos = 0;
      $scope.TotalDesembolsosConSeguro = 0;
      for(var i = 0; i < r.length; i++){
        var d = r[i].post_date;
        var estado = r[i].fields.estado;
        r[i].post_date = $sce.trustAsHtml(moment(d).format('DD <i>MMM</i>'));
        if( typeof estado == "string" ){
          r[i].class = estado.replaceAll(" ","-").toLowerCase();
        }else{
          r[i].class = estado;
        }
        if( estado == "Desembolsado" ){
          $scope.TotalDesembolsos++;
        }
        if( estado == "Desembolsado con seguro" ){
          $scope.TotalDesembolsosConSeguro++;
          $scope.TotalDesembolsos++;
        }
      }
      $scope.listaCotizaciones = r;
      // $scope.percentPenetracion = Math.floor(($scope.TotalDesembolsosConSeguro * 100) / $scope.listaCotizaciones.length);
      $scope.percentPenetracion = Math.floor(($scope.TotalDesembolsosConSeguro / $scope.TotalDesembolso)) * 100;
      $scope.percentPenetracion = ( isNaN($scope.percentPenetracion) ) ? 0 : $scope.percentPenetracion;

      // $scope.percentEfectividad = Math.floor(($scope.TotalDesembolsos * 100) / $scope.listaCotizaciones.length);
      $scope.percentEfectividad = Math.floor(($scope.TotalDesembolsos * 100) / $scope.listaCotizaciones.length);
      $scope.percentEfectividad = ( isNaN($scope.percentEfectividad) ) ? 0 : $scope.percentEfectividad;

      $timeout(function () {
        $rootScope.load = false;
      },400);
    }, function(error) {

    });
  }

  function moneyInt($n){
    $n = parseFloat($n.slice(1).replaceAll(".",""));
    return $n;
  }

  String.prototype.replaceAll = function(target, replacement) {
    return this.split(target).join(replacement);
  };

  var scroll = false;
  $scope.scrollDown = function($el){
    if( scroll == false ){
      scroll = true;
      $scope.loadmoreScroll = true;
      $scope.nn--;
      var registro2 = Registro;
      $scope.registro2 = registro2;
      $scope.registro2.get({
        // "IDUs": 1
        "IDUs": $rootScope.user.data.id,
        "Month": $scope.nn
      }).then(function(r) {
        if( r.length == 0 ){
          $scope.nn++;
        }else{

          for(var i = 0; i < r.length; i++){
            var d = r[i].post_date;
            var estado = r[i].fields.estado;
            r[i].post_date = $sce.trustAsHtml(moment(d).format('DD <i>MMM</i>'));
            if( typeof estado == "string" ){
              r[i].class = estado.replaceAll(" ","-").toLowerCase();
            }else{
              r[i].class = estado;
            }
          }
          var other = $scope.listaCotizaciones.concat(r);
          $el.find('ul').children('li').last().after('<span>'+$scope.arrayMeses[$scope.nn]+'</span>');
          $scope.listaCotizaciones = other;

        }
        $scope.loadmoreScroll = false;
        scroll = false;
      }, function(error) {

      });
    }
  }

  $months = [
    'ENERO',
    'FEBRERO',
    'MARZO',
    'ABRIL',
    'MAYO',
    'JUNIO',
    'JULIO',
    'AGOSTO',
    'SEPTIEMBRE',
    'OCTUBRE',
    'NOVIEMBRE',
    'DICIEMBRE',
  ];
  $statePerMonth = [];

  $scope.TotalDesembolsos = 0;
  $scope.TotalDesembolsosConSeguro = 0;

  $scope.percentPenetracion = 0;
  $scope.percentEfectividad = 0;


  $scope.openEstado = false;
  $scope.openOpciones = false;

  $scope.init = function(){
    $rootScope.simulador = false;
    $scope.pages.active = false;
    $rootScope.consultorEstado = "";
  }

  $rootScope.mInicio = function () {
    $scope.details = false;
    $scope.reporteLista = true;
    $scope.profile = false;
    $scope.historial = false;
    $scope.seguros = false;
    $rootScope.title = "inicio";
    $scope.init();
  }

  $rootScope.mHistorial = function () {
    $rootScope.title = "historial";
    $rootScope.consultorEstado = "historial";
    $scope.details = false;
    $scope.reporteLista = false;
    $scope.profile = false;
    $scope.historial = true;
    $scope.seguros = false;
    $scope.nn = n;
    $scope.init();
    mixpanel.track("historial Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
    });
  }

  $rootScope.mSeguros = function () {
    $scope.getPages();
    $rootScope.consultorEstado = "seguros";
    mixpanel.track("Seguro Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
    });
  }

  $rootScope.mPerfil = function () {
    $rootScope.title = "Perfil";
    $rootScope.consultorEstado = "perfil";
    $rootScope.consultorEstado = "perfil";
    $scope.details = false;
    $scope.reporteLista = false;
    $scope.profile = true;
    $scope.historial = false;
    $scope.seguros = false;
    $scope.init();
    mixpanel.track("Perfil Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
    });
  }

  $rootScope.initSimulate = function () {
    mixpanel.track("Inicio del simulador Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
    });
    $rootScope.consultorEstado = "simulador";
    $state.go("Consultor.Simulador");
    $timeout(function () {
      $scope.details = false;
    },400);
  };

  $rootScope.newCotiuser = function () {
    $rootScope.clientInfo = {
      lastName: $scope.datosPrestamoSeleted.PersonalArray[1].value,
      mail: $scope.datosPrestamoSeleted.PersonalArray[2].value,
      cell: $scope.datosPrestamoSeleted.PersonalArray[3].value,
      name: $scope.datosPrestamoSeleted.PersonalArray[0].value
    }
    $state.go("Consultor.tipoPrestamo");
    $timeout(function () {
      $scope.details = false;
    },400);
  };

  $scope.consultorInit = function () {

    if( $scope.seguros == true ){

      $rootScope.title = "Seguros";
      $rootScope.alert.show = false;
      $rootScope.simulador = true;
      $scope.pages.active = false;
      $rootScope.pagesNumber = '';

      // angular.element(".o-main-header .a-exit").hide();

      $scope.sp1 = false;
      $scope.sp2 = false;
      $scope.sp3 = false;

      $scope.saveprev = $rootScope.prev;
      $rootScope.prev = $scope.prevNew;

      $scope.saveCancel = $rootScope.cancel;
      $rootScope.cancel = $scope.cancelNew;
    }
  }

  $scope.nextSeguros = function (type,index) {
    if( type == 1 ){
      $scope.sp1 = true;
      $scope.pagesPostSelected = $scope.pagesPost[index];
    }else if( type == 2 ){
      console.log($scope.pagesPostSelected);
      index++;
      $scope.sp2 = true;
      $scope.pagesPostSelected.segundo = {};
      $scope.pagesPostSelected.segundo.title = $scope.pagesPostSelected.titulo["titulo"+index];
      $scope.pagesPostSelected.segundo.texto = $scope.pagesPostSelected.text["texto"+index];
    }
  }

  $scope.cancelNew = function () {
    $rootScope.cancel = $scope.saveCancel;
    $state.reload();
  }

  $scope.prevNew = function(){
    if( $scope.sp2 == false && $scope.sp1 == false ){
      $rootScope.prev = $scope.saveprev;
      angular.element(".o-main-header .a-exit").show();
      $state.reload();
    }
    if( $scope.sp2 == false && $scope.sp1 == true ){
      $scope.sp1 = false;
    }
    if( $scope.sp2 == true ){
      $scope.sp2 = false;
    }
  };

  $scope.changePass2 = function(id){
    $rootScope.load = true;
    $scope.validatePass.changePass({
      "ID": id,
      "Pass": $scope.pass.passwordNew1
    }).then(function(r){
      $rootScope.load = false;
      $scope.alert.msgAlert = "La contraseña se cambio Correctamente";
      $scope.alert.show = true;
      $rootScope.alert.check = false;

      $scope.pass.passwordOld = "";
      $scope.pass.passwordNew2 = "";
      $scope.pass.passwordNew2 = "";
    }, function (err) {
    });
  }

  $scope.changePass = function(form){
    if( form.$valid ){
      if( $scope.pass.passwordNew1 == $scope.pass.passwordNew2 ) {
        $rootScope.load = true;
        $scope.alert.show = false;
        var validatePass = User;
        $scope.validatePass = validatePass;
        $scope.validatePass.validatePass({
          "Usuario": $scope.user.data.userName,
          "Clave": $scope.pass.passwordOld
        }).then(function(r){
          $rootScope.load = false;
          var result = r.data.result;
          if ( result == 1 ){
            $scope.changePass2(r.data.data.id);
          }else if( result == 0 ){
            $scope.alert.msgAlert = "La contraseña que ingresaste es incorrecta.";
            $scope.alert.show = true;
            $rootScope.alert.check = false;
          }
        }, function (err) {
        });
      }else{
        $scope.alert.msgAlert = "Debes ingresar la misma contraseña dos veces para confirmarla.";
        $scope.alert.show = true;
        $rootScope.alert.check = false;
      }
    }else{
      $scope.alert.msgAlert = "Debes ingresar la misma contraseña dos veces para confirmarla.";
      $scope.alert.show = true;
      $rootScope.alert.check = false;
    }
  }

  $scope.registros = function() {
    $rootScope.consultorEstado = "";
    var registro = Registro;
    $scope.registro = registro;
    $scope.registro.get({
      // "IDUs": 1
      "IDUs": $rootScope.user.data.id,
      "Month": n
    }).then(function(r) {
      $scope.TotalDesembolsos = 0;
      $scope.TotalDesembolsosConSeguro = 0;
      for(var i = 0; i < r.length; i++){
        var d = r[i].post_date;
        var estado = r[i].fields.estado;
        r[i].post_date = $sce.trustAsHtml(moment(d).format('DD <i>MMM</i>'));
        if( typeof estado == "string" ){
          r[i].class = estado.replaceAll(" ","-").toLowerCase();
        }else{
          r[i].class = estado;
        }
        // $statePerMonth[moment(d).format('MM')];
        if( estado == "Desembolsado" ){
          $scope.TotalDesembolsos++;
        }
        if( estado == "Desembolsado con seguro" ){
          $scope.TotalDesembolsosConSeguro++;
        }
      }
      $scope.listaCotizaciones = r;
      $scope.percentPenetracion = Math.floor(($scope.TotalDesembolsosConSeguro * 100) / $scope.listaCotizaciones.length);
      $scope.percentEfectividad = Math.floor(($scope.TotalDesembolsos * 100) / $scope.listaCotizaciones.length);

      // $scope.listaCotizacionesHisto[n] = {};
      // $scope.listaCotizacionesHisto[n].mes = $scope.arrayMeses[n];
      // $scope.listaCotizacionesHisto[n].datos = r;

      $timeout(function () {
        $rootScope.load = false;
      },400);
    }, function(error) {

    });
  };

  $scope.registrosUpdate = function(Estado) {
    $rootScope.load = true;
    $scope.registro.update({
      // "IDUs": 1,
      "IDUs": $rootScope.user.data.id,
      "IDPost": $scope.datosPrestamoSeleted.ID,
      "estado": Estado
    }).then(function(r) {
      $rootScope.load = false;
      $scope.listaCotizaciones[$scope.historialSelect].class = Estado.toLowerCase().split(" ").join("-");
      $rootScope.okestado();
    }, function(error) {

    });
  };

  $scope.getPages = function() {
    $rootScope.load = true;
    var pagesStatic = PagesStatic;
    $scope.pagesStatic = pagesStatic;
    $scope.pagesStatic.get({}).then(function(r) {
      console.log(r);
      $scope.pagesPost = r;
      $timeout(function () {
        $rootScope.load = false;
      },400);
      $rootScope.title = "Seguros";
      $scope.details = false;
      $scope.reporteLista = false;
      $scope.profile = false;
      $scope.historial = false;
      $scope.seguros = true;
      $scope.consultorInit();
    }, function(error) {
      console.log(error);
      $rootScope.load = false;
    });
  };


  function remove_character(k){
    if(typeof k == "string" ){
      k = k.replaceAll("_"," ");
      k = k.slice(0, 1).toUpperCase() + k.slice(1);
    }
    return k;
  }

  $scope.getUsersMail = function() {
    // $rootScope.load = true;
    // $scope.registro.getUsers({
    //   "IDUs": $scope.datosPrestamoSeleted.post_author,
    // }).then(function(r) {
    //   $scope.sendMail();
    // }, function(error) {

    // });
  };
  $scope.sendMail = function(){
    $rootScope.load = true;
    $scope.mailObject = {
      asesor: $scope.user,
      cliente: $scope.datosPrestamoSeleted.PersonalArray,
      head: {
        titulo1: "Resultados",
        titulo2: $scope.datosPrestamoSeleted.category
      },
      rows: $scope.datosPrestamoSeleted.fieldsArray,
      footer: ($scope.datosPrestamoSeleted.summaryArray2[1].data.length == 0)? undefined: $scope.datosPrestamoSeleted.summaryArray2[1].data
    };
    console.log($scope.mailObject);
    $scope.registro.mail({
      "datosTabla": JSON.stringify( $scope.mailObject ),
    }).then(function(r) {
      console.log(r);
      $rootScope.load = false;
    }, function(error) {
      console.log(error);
      $rootScope.load = false;
    });
  }
  $scope.mailclient = function() {
    // $scope.getUsersMail();
    mixpanel.track("Envio de correo Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
      "cliente": $scope.datosPrestamoSeleted.PersonalArray[0].value+" "+$scope.datosPrestamoSeleted.PersonalArray[1].value,
      "cliente email": $scope.datosPrestamoSeleted.PersonalArray[2].value
    });
    $scope.sendMail();
    $rootScope.okmail();
  };

  $scope.historialSelect = 0;
  $scope.detailsOpen = function ($index) {
    $scope.details = true;
    $scope.datosPrestamoSeleted = $scope.listaCotizaciones[$index];
    $scope.historialSelect = $index;

    $rootScope.titleResultados = $scope.datosPrestamoSeleted.category;

    $scope.datosPrestamoSeleted.fieldsArray = [];
    $scope.datosPrestamoSeleted.PersonalArray = [];
    $scope.datosPrestamoSeleted.summaryArray = [];
    $scope.datosPrestamoSeleted.summaryArray2 = [];

    $scope.datosPrestamoSeleted.summaryArray[0] = {};
    $scope.datosPrestamoSeleted.summaryArray[0].data = [];
    $scope.datosPrestamoSeleted.summaryArray[1] = {};
    $scope.datosPrestamoSeleted.summaryArray[1].data = [];
    $scope.datosPrestamoSeleted.summaryArray[2] = {};
    $scope.datosPrestamoSeleted.summaryArray[2].data = [];

    $scope.datosPrestamoSeleted.summaryArray2[1] = {};
    $scope.datosPrestamoSeleted.summaryArray2[1].data = [];
    // $scope.datosPrestamoSeleted.summaryArray2[1].data[0] = { name:"Primera Cuota", value:"" };
    $scope.datosPrestamoSeleted.summaryArray2[1].title = "";
    var tranquilidad_global = "TG";

    for(var k in $scope.datosPrestamoSeleted.fields){
      var d = $scope.datosPrestamoSeleted.fields[k];
      if( k.trim() != "_edit_lock" ){
        if( k.trim() == "apellido_del_cliente" ||
            k.trim() == "celular_del_cliente" ||
            k.trim() == "nombre_del_cliente" ||
            k.trim() == "email_del_cliente" ){
          $scope.datosPrestamoSeleted.PersonalArray[$scope.datosPrestamoSeleted.PersonalArray.length] = {
            name: remove_character(k),
            value: d
          }
        }else{
          if( $scope.datosPrestamoSeleted.category == "Préstamo Personal" ){
            if( k.trim() == "cuota" || k.trim() == "cuota_protegida" || k.trim() == "cuota_+_vida"  ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: (k.trim() == "cuota")?'Cuota Sin Seguro CP':(k.trim() == "cuota_+_vida")?'Total Cuota + CP':remove_character(k),
                value: d,
              }
            }else{
              if( k.trim() == "monto" || k.trim() == "edad" || k.trim() == "plazo_meses" || k.trim() == "fecha_desembolso" || k.trim() == "fecha_desembolso" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "DATOS DEL CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "capital" || k.trim() == "intereses" || k.trim() == "seguro_de_vida" || k.trim() == "total_primera_cuota" || k.trim() == "tasa_periodica_m_v" || k.trim() == "equivalencia_tasa_nominal_m_v" || k.trim() == "equivalencia_tasa_efectiva_anual" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                if( k.trim() == "tasa_periodica_m_v" ) k = "Tasa Periódica MV";
                if( k.trim() == "equivalencia_tasa_nominal_m_v" ) k = "Tasa Nominal MV";
                if( k.trim() == "equivalencia_tasa_efectiva_anual" ) k = "Tasa Efectiva Anual:";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
                if( k.trim() == "seguro_de_vida" ){
                  // $scope.datosPrestamoSeleted.summaryArray2[1].title = "Primera Cuota";
                  $scope.datosPrestamoSeleted.summaryArray2[1].data[$scope.datosPrestamoSeleted.summaryArray2[1].data.length] = {
                    name: remove_character(k),
                    value: d
                  }
                }
              }else if( k.trim() == "cuota_sin_seguro_cp" || k.trim() == "cuota_protegida" || k.trim() == "prima_seguro_por_millon" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                if( k.trim() == "cuota_sin_seguro_cp" ) k = "Cuota sin Seguro CP";
                if( k.trim() == "prima_seguro_por_millon" ) k = "Prima Seguro por Millón";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vivienda" ) {
            if( k.trim() == "cuota" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" || k.trim() == "total_cuota_mensual_+_seguros" || k.trim() == "cuota_sin_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: (k.trim() == "vivienda_protegida")?'Vivienda Protegida Contenidos':(k.trim() == "incendio")?'Vivienda Protegida Incendio':(k.trim() == "cuota_protegida")?'Cuota Protegida':(k.trim() == "vida_deudor")?'Vida Deudor':(k.trim() == "cuota_sin_seguros")?'Cuota Sin Seguros':remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "valor_del_inmueble" || k.trim() == "cuota_inicial" || k.trim() == "valor_leasing_o_credito_hipotecario" || k.trim() == "plazo_en_meses" || k.trim() == "opcion_de_compra" || k.trim() == "opcion_de_compra_t" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MONTO Y PLAZO";
                if( k.trim() == "opcion_de_compra_t" ) k = k.slice(0, k.length-2);
                if( k.trim() == "opcion_de_compra" ) k = k+"_%";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tipo_tasa" || k.trim() == "d_t_f_t_a" || k.trim() == "d_t_f__+" || k.trim() == "tasa_e_a" || k.trim() == "tasa_m_v" || k.trim() == "tasa_fija" || k.trim() == "tasa" || k.trim() == "vivienda_protegida" || k.trim() == "vivienda_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                if( k.trim() == "d_t_f_t_a" ) k = "D.T.F. (T.A.)";
                if( k.trim() == "d_t_f__+" ) k = "D.T.F. +";
                if( k.trim() == "tasa_e_a" ) k = "Tasa E.A.";
                if( k.trim() == "tasa_m_v" ) k = "Tasa M.V.";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguros" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Tradicional" ) {
            if( k.trim() == "tranquilidad_global" ){
              tranquilidad_global = d;
            }
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" || k.trim() == "tranquilidad_global_" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: ( k.trim() == "tranquilidad_global_" ) ? 'Valor Prima '+tranquilidad_global : ( k.trim() == "total_cuota_mensual_+_seguros" ) ? 'Total Cuota Mensual + Seguros' : ( k.trim() == "poliza_colectiva" ) ? 'Póliza Colectiva' : ( k.trim() == "cuota_1" ) ? 'Cuota mensual' : ( k.trim() == "total_prestamo" ) ? 'Préstamo (Créd + '+tranquilidad_global+')' : remove_character(k),
                value: d,
                class: ( k.trim() == "tranquilidad_global_" ) ? 'bottom-color' : ''
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo 14 Cuotas" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Premium" ) {
            if( k.trim() == "seguro_tranquilidad_global" ){
              tranquilidad_global = d;
            }
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_inicial" || k.trim() == "tranqulidad_global" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: ( k.trim() == "tranqulidad_global" ) ? 'Valor Prima '+tranquilidad_global : ( k.trim() == "total_cuota_mensual_+_seguros" ) ? 'Total Cuota + Seguros' : ( k.trim() == "poliza_colectiva" ) ? 'Póliza Colectiva' : ( k.trim() == "cuota_inicial" ) ? 'Cuota mensual' : ( k.trim() == "total_prestamo" ) ? 'Préstamo (Créd + '+tranquilidad_global+')' : remove_character(k),
                value: d,
                class: ( k.trim() == "tranqulidad_global" ) ? 'bottom-color' : ''
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" || k.trim() == "total_abono_a_capital" || k.trim() == "promedio_abono_capital_con_t_g" || k.trim() == "mes_6" || k.trim() == "mes_9" || k.trim() == "mes_12" || k.trim() == "mes_18" || k.trim() == "mes_24" || k.trim() == "mes_32" || k.trim() == "mes_36" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }
        }
      }
    }

    var otherArray = [];
    for(var i = 0; i < $scope.datosPrestamoSeleted.fieldsArray.length; i++){
      var d = $scope.datosPrestamoSeleted.fieldsArray[i];
      if( d.name.search("Total") != -1 ){
        otherArray.splice($scope.datosPrestamoSeleted.fieldsArray.length, 0, d);
      }else if( d.name.search("Valor Prima") != -1 ){
        otherArray.splice(0, 0, d);
      }else if( d.name.search("Préstamo ") != -1 ){
        otherArray.splice(1, 0, d);
      }else if( d.name.search("Seguro de") != -1 ){
        otherArray.splice(2, 0, d);
      }else{
        otherArray[i] = d;
      }
    }
    $scope.datosPrestamoSeleted.fieldsArray = otherArray;

  };

  $rootScope.scopeCosultor = $scope;

  $scope.detailsClose = function () {
    $scope.details = false;
    // $state.reload();
    // $rootScope.load = true;
    // $scope.registros();
  };

  if($state.current.name == "Consultor"){
    $scope.registros();
  }







  // $scope.userfake = function () {
  //     var user = User;
  //     $scope.user = user;
  //     user.login({
  //       Usuario: "@dm1n0",
  //       Clave: "6p9RvU9ck$Wo&0K4fn"
  //     }).then(function(r) {
  //         var idUser = user.data.idApp_Users;
  //         var result = user.data.result;
  //         $rootScope.user = user.data;
  //         $scope.user = user.data;
  //         console.log($scope);
  //         $scope.user.data.img = $sce.trustAsHtml($scope.user.data.img);

  //         // $scope.registros();
  //         // $scope.Makeregistros();
  //     }, function(error) {

  //     });
  // }

  // $scope.userfake();

  // $rootScope.clientInfo = {
  //   lastName: "alfonso",
  //   mail: "michael@hotmail.com",
  //   cell: "30158444744",
  //   name: "michael"
  // }

  // $scope.Makeregistros = function() {
  //   $scope.fieldsTosave = {};
  //         $scope.fieldsTosave["apellido_del_cliente"] ="";
  //         $scope.fieldsTosave["email_del_cliente"] ="";
  //         $scope.fieldsTosave["celular_del_cliente"] ="";
  //         $scope.fieldsTosave["nombre_del_cliente"] ="";

  //         $scope.fieldsTosave["edad_solicitante"] ="";
  //         $scope.fieldsTosave["seguro_poliza_colectiva"] = "";
  //         $scope.fieldsTosave["tranquilidad_global"] = "";
  //         $scope.fieldsTosave["monto"] = "";
  //         $scope.fieldsTosave["plazo_meses"] = "";
  //         $scope.fieldsTosave["tasa_lista_concesionario"] = "";
  //         $scope.fieldsTosave["extraprima"] = "";
  //         $scope.fieldsTosave["tipo_de_cliente"] = "";
  //         $scope.fieldsTosave["tipo_de_plan"] ="";
  //         $scope.fieldsTosave["cuota_1"] = "";
  //         $scope.fieldsTosave["seguro_de_vida"] = "";
  //         $scope.fieldsTosave["poliza_colectiva"] ="";
  //         $scope.fieldsTosave["tranqulidad_global"] ="";
  //         $scope.fieldsTosave["tasa_final_al_cliente"] ="";
  //   $scope.registro.save({
  //     "IDUs": $scope.user.data.id,
  //     "IDCa": 2.1,
  //     "Keys": JSON.stringify( $scope.fieldsTosave )
  //   }).then(function(r) {
  //     console.log(r);
  //   }, function(error) {

  //   });
  // };
  mixpanel.track("Login User",{
    "user": $rootScope.user.data.name,
    "email": $rootScope.user.data.email,
  });



}]);

// Controlador para el login
app.controller('loginController', ['$rootScope', '$state', '$scope', 'User', '$api', 'Session', '$sce', function($rootScope, $state, $scope, User, $api, Session, $sce) {
  // $scope.appLogo = '01_Icono_App_Bancaseguros.svg';
    $scope.appLogo = 'miggo_loader-login-35201/Miggo_login.png';
    $scope.appOcciente = '35_LogoBOCC_Login.svg';
    $scope.appPasswordRecoveryMessage = '';
    $scope.login = {
        username: '',
        password: ''
    };
    $scope.forget = false;
    $scope.resetPasswordModal = false;
    $scope.showformmsg = false;
    $scope.formWarningMessage = '';
    $rootScope.load = false;
    $scope.loginReturn = function(){
        $scope.forget = false;
        $scope.showformmsg = false;
        $rootScope.load = false;
    }
    $scope.resetPassword = function(bol) {
        $scope.forget = true;
    };
    $scope.authUser = function(form) {
        //$state.go('Consultor');
        $scope.showformmsg = false;
        $rootScope.load = true;
        if (form.$valid) {
            var user = User;
            user.login({
                Usuario: $scope.login.username,
                Clave: $scope.login.password
            }).then(function(r) {
                $rootScope.load = false;
                var idUser = user.data.idApp_Users;
                var result = user.data.result;
                $rootScope.user = user.data;
                localStorage.setItem("login", JSON.stringify($rootScope.user));
                if ( result == 1 ) $state.go('Consultor'), $scope.user.data.img = $sce.trustAsHtml($scope.user.data.img);
                if ( result == 0 ) $scope.formWarningMessage = user.data.message, $scope.showformmsg = true;
            }, function(error) {
                if(error){
                  if (error.indexOf('message does not match') > -1){
                    console.log(error);
                    error = 'Error del servidor.';
                  }
                }
                $rootScope.load = false;
                $scope.showformmsg = true;
                $scope.formWarningMessage = error;
            });

        } else {
            $rootScope.load = false;
            $scope.showformmsg = true;
            $scope.formWarningMessage = 'Usuario y clave son obligatorios';
        }
    };

    $scope.resendpass = function(form){
        $scope.showformmsg = false;
        $rootScope.load = true;
        if (form.$valid) {
            var user = User;
            user.sendforget({
                user_login: $scope.login.username,
            }).then(function(r) {
                console.log(r);
                $rootScope.load = false;
                $scope.showformmsg = true;
                $scope.formWarningMessage = r.data;
            }, function(error) {

            });

        } else {
            $rootScope.load = false;
            $scope.showformmsg = true;
            $scope.formWarningMessage = 'Usuario es obligatorio';
        }
    }
}]);

app.controller('prestamoPersonalController', ['$rootScope', '$scope', '$template', 'User', '$state', 'Registro',function($rootScope, $scope, $template, User, $state, Registro) {

    $rootScope.title = "PRÉSTAMO PERSONAL";
    $rootScope.simulador = true;
    $scope.sub = false;
    $rootScope.pagesActive = true;
    $rootScope.pagesNumber = '1/4';
    $step = 0;
    $scope.$rootScope = $rootScope;

    $scope.p1 = true;
    $scope.p2 = false;
    $scope.p3 = false;
    $scope.p4 = false;

    $scope.datos1 = {};
    $scope.datos2 = {};
    $scope.datos3 = {};
    $scope.max = false;

    $idnewPost = "";

    String.prototype.replaceAll = function(target, replacement) {
      return this.split(target).join(replacement);
    };

    Number.prototype.formatMoney = function(c, d, t){
    var n = this,
        c = isNaN(c = Math.abs(c)) ? 0 : c,
        d = d == undefined ? "," : d,
        t = t == undefined ? "." : t,
        s = n < 0 ? "-" : "",
        i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
        j = (j = i.length) > 3 ? j % 3 : 0;
       return "$" + s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
     };

    function moneyInt($n){
      $n = parseFloat($n.slice(1).replaceAll(".",""));
      return $n;
    }

    $scope.equivalenciaTasaNominal = function () {
      $scope.datos2.tasanominal = (parseFloat($scope.datos2.tasaperiodica) * 12);
      $scope.datos2.tasanominal = $scope.datos2.tasanominal.toFixed(2) + "%";
      $scope.datos2.tasaefectivaNual = (( ( Math.pow( 1 + ( ( parseFloat($scope.datos2.tasanominal) / 100 )/12), 12) ) - 1 ) * 100);
      $scope.datos2.tasaefectivaNual = $scope.datos2.tasaefectivaNual.toFixed(2) + "%";
    }

    $scope.prevNew = function(){
      if ( $step > 0){
        $step--;
        $scope.p1 = false;
        $scope.p2 = false;
        $scope.p3 = false;
        $scope.p4 = false;
        if( $step == 0 ){
          $scope.p1 = true;
          $rootScope.pagesNumber = '1/4';
        }else if( $step == 1 ){
          $scope.p2 = true;
          $rootScope.pagesNumber = '2/4';
        }else if( $step == 2 ){
          $scope.p3 = true;
          $rootScope.pagesNumber = '3/4';
        }
      }else{
        $rootScope.prev = $scope.saveprev;
        $state.go('Consultor.tipoPrestamo');
      }
    };

    $scope.saveprev = $rootScope.prev;
    $rootScope.prev = $scope.prevNew;

    $scope.next = function(form){
      if( form.$valid ){
        if ( $step < 3){
          $step++;
          $scope.p1 = false;
          $scope.p2 = false;
          $scope.p3 = false;
          $scope.p4 = false;
          if( $step == 1 ){
            $scope.p2 = true;
            $rootScope.pagesNumber = '2/4';

            if( $scope.datos2.tasaperiodica != undefined ){
              $scope.equivalenciaTasaNominal();
            }

          }else if( $step == 2 ){
            $scope.p3 = true;
            $rootScope.pagesNumber = '3/4';
            var a = ( moneyInt($scope.datos1.monto) * ( parseFloat($scope.datos2.tasaperiodica) / 100));
            var b = 1-  Math.pow( (( parseFloat($scope.datos2.tasaperiodica) / 100)+1), (-$scope.datos1.plazo)  );
            $scope.datos3.cuotaSnseguro = parseInt(a/b);

            if( moneyInt($scope.datos1.monto ) <= 40000000000000000000 ){
              $scope.max = true;
              if( $scope.datos3.cuotaSnseguro > 4000000 || $scope.datos1.edad > 70 ){
                $scope.datos3.cuotaProtegida = 0;
                $scope.datos3.primeraSeguro = 0;
              }else{
                $scope.datos3.cuotaProtegida = parseInt( $scope.datos3.cuotaSnseguro * ( (6.306*1.19) / 100 ) );
                $scope.datos3.primeraSeguro = parseInt( $scope.datos3.cuotaProtegida / ( moneyInt($scope.datos1.monto) / 1000000) );
              }

              $scope.datos3.cuotaProtegida = $scope.datos3.cuotaProtegida.formatMoney();
              $scope.datos3.primeraSeguro = $scope.datos3.primeraSeguro.formatMoney();

              // $scope.TotalCuotaCpVida = 2;
              // $scope.TotalCuotaCpVida = $scope.datos3.cuotaSnseguro + moneyInt($scope.datos3.primeraSeguro);
              // $scope.TotalCuotaCpVida = $scope.TotalCuotaCpVida.formatMoney();


              // $scope.TotalCuotaCpVida = $scope.datos3.cuotaSnseguro + moneyInt($scope.datos3.cuotaProtegida) + moneyInt($scope.datos3.primeraSeguro);
              $scope.TotalCuotaCpVida = $scope.datos3.cuotaSnseguro + moneyInt($scope.datos3.cuotaProtegida);
              $scope.TotalCuotaCpVida = $scope.TotalCuotaCpVida.formatMoney();
            }else{
              $scope.max = false;
              $scope.TotalCuotaCpVida = $scope.datos3.cuotaSnseguro.formatMoney();
            }
            $scope.datos3.cuotaSnseguro = $scope.datos3.cuotaSnseguro.formatMoney();
            if( moneyInt($scope.datos3.cuotaSnseguro) > 4000000 || $scope.datos1.edad > 70 ){
              $scope.datos3.cuotaProtegida = 'No aplica seguro desempleo';
              $scope.datos3.primeraSeguro = 'No aplica';
            }

            $scope.datos3.capital = moneyInt($scope.datos3.cuotaSnseguro) - ( (moneyInt($scope.datos1.monto) * (parseInt($scope.datos2.tasanominal)/100)) * (30 / 360) );
            $scope.datos3.intereses = (moneyInt($scope.datos1.monto) * (parseInt($scope.datos2.tasanominal)/100)) * (30 / 360);
            console.log($scope.datos1.diaCorte);

            $scope.diaDesemboldo = parseInt($scope.datos1.fechaDesembolso.split("/")[0]);
            if( $scope.datos1.diaCorte == undefined ) $scope.datos1.diaCorte = 2;

            if( $scope.diaDesemboldo <= $scope.datos1.diaCorte ){
              $scope.diacalculadovalor = 30;
            }else{
              $scope.diacalculadovalor = 60;
            }
            console.log(($scope.diacalculadovalor - $scope.diaDesemboldo) + $scope.datos1.diaCorte);
            console.log($scope.datos1.diaCorte);
            console.log($scope.diacalculadovalor);
            console.log($scope.diaDesemboldo);

            $scope.datos3.segurodevida = (moneyInt($scope.datos1.monto) * 0.008 * (330 - (30 - (($scope.diacalculadovalor - $scope.diaDesemboldo) + $scope.datos1.diaCorte)) )) / 360;

            $scope.datos3.capital = $scope.datos3.capital.formatMoney();
            $scope.datos3.intereses = $scope.datos3.intereses.formatMoney();
            $scope.datos3.segurodevida = $scope.datos3.segurodevida.formatMoney();

            $scope.datosPrestamo = [];
            $scope.datosPrestamo = [
              {
                name: "Resultado",
                val: "",
                Subname: "Préstamo Personal",
                active: true
              },{
                name: "Cuota Sin Seguro CP",
                val: $scope.datos3.cuotaSnseguro,
                active: true
              },{
                name: "Cuota Protegida",
                val: $scope.datos3.cuotaProtegida,
                active: $scope.max
              },/*{
                name: "Vida",
                val: $scope.datos3.primeraSeguro,
                active: $scope.max
              },*/{
                name: "Total Cuota + CP",
                val: $scope.TotalCuotaCpVida,
                active: true
              }
            ];

            $scope.totalPrimeraCuota = moneyInt($scope.datos3.capital) + moneyInt($scope.datos3.intereses) +  moneyInt($scope.datos3.segurodevida);
            $scope.totalPrimeraCuota  = $scope.totalPrimeraCuota.formatMoney();
            $scope.datosPrestamo2 = [];
            $scope.datosPrestamo2 = [
              /*{
                name: "",
                val: "",
                Subname: "Primera Cuota",
                active: true
              },{
                name: "Capital",
                val: $scope.datos3.capital,
                active: true
              },{
                name: "Intereses",
                val: $scope.datos3.intereses,
                active: true
              },*/{
                name: "Seguro de Vida Anual",
                val: $scope.datos3.segurodevida,
                active: true
              }/*,{
                name: "Total Primera Cuota",
                val: $scope.totalPrimeraCuota,
                active: true
              }*/
            ];
          }else if( $step == 3 ){
            // angular.element(".a-return").hide();
            $scope.p4 = true;
            $rootScope.pagesNumber = '4/4';
            console.log($rootScope);

            $scope.summary = [
              {
                title: "DATOS DEL CRÉDITO",
                fields: [
                  {
                    name: "Monto",
                    val: $scope.datos1.monto,
                    active: true
                  },{
                    name: "Edad",
                    val: $scope.datos1.edad,
                    active: true
                  },{
                    name: "Plazo / meses",
                    val: $scope.datos1.plazo,
                    active: true
                  },{
                    name: "Fecha desembolso",
                    val: $scope.datos1.fechaDesembolso,
                    active: true
                  },{
                    name: "Día de corte",
                    val: $scope.datos1.diaCorte,
                    active: true
                  }
                ]
              },{
                title: "TASA DE CRÉDITO",
                fields: [
                  {
                    name: "Tasa periodica M.V.",
                    val: $scope.datos2.tasaperiodica,
                    active: true
                  },{
                    name: "Tasa nominal M.V.",
                    val: $scope.datos2.tasanominal,
                    active: true
                  },{
                    name: "Tasa efectiva anual",
                    val: $scope.datos2.tasaefectivaNual,
                    active: true
                  }
                ]
              },{
                title: "CUOTA MENSUAL",
                fields: [
                  {
                    name: "Cuota sin Seguro C.P.",
                    val: $scope.datos3.cuotaSnseguro,
                    active: true
                  },{
                    name: "Cuota Protegida",
                    val: $scope.datos3.cuotaProtegida,
                    active: true
                  },{
                    name: "Prima seguro por millón",
                    val: $scope.datos3.primeraSeguro,
                    active: true
                  }
                ]
              },
            ];

            $rootScope.pagesNumber = '4/4';

            $scope.fieldsTosave = {};
            $scope.fieldsTosave["apellido_del_cliente"] = $scope.$rootScope.clientInfo.lastName;
            $scope.fieldsTosave["email_del_cliente"] = $scope.$rootScope.clientInfo.mail;
            $scope.fieldsTosave["celular_del_cliente"] = $scope.$rootScope.clientInfo.cell;
            $scope.fieldsTosave["nombre_del_cliente"] = $scope.$rootScope.clientInfo.name;

            $scope.fieldsTosave["edad"] = $scope.datos1.edad;
            $scope.fieldsTosave["cuota"] = $scope.datos3.cuotaSnseguro;
            $scope.fieldsTosave["vida"] = $scope.datos3.primeraSeguro;
            $scope.fieldsTosave["prima_seguro_por_millon"] = $scope.datos3.primeraSeguro;
            $scope.fieldsTosave["cuota_+_vida"] = $scope.TotalCuotaCpVida;
            $scope.fieldsTosave["plazo_meses"] = $scope.datos1.plazo;
            $scope.fieldsTosave["cuota_protegida"] = $scope.datos3.cuotaProtegida;
            $scope.fieldsTosave["monto"] = $scope.datos1.monto;
            $scope.fieldsTosave["cuota_sin_seguro_cp"] = $scope.datos3.cuotaSnseguro;
            $scope.fieldsTosave["equivalencia_tasa_efectiva_anual"] = $scope.datos2.tasaefectivaNual;
            $scope.fieldsTosave["fecha_desembolso"] = $scope.datos1.fechaDesembolso;
            $scope.fieldsTosave["dia_de_corte"] = $scope.datos1.diaCorte;
            $scope.fieldsTosave["tasa_periodica_m_v"] = $scope.datos2.tasaperiodica;
            $scope.fieldsTosave["equivalencia_tasa_nominal_m_v"] = $scope.datos2.tasanominal;

            $scope.fieldsTosave["capital"] = $scope.datos3.capital;
            $scope.fieldsTosave["intereses"] = $scope.datos3.intereses;
            $scope.fieldsTosave["seguro_de_vida"] = $scope.datos3.segurodevida;
            $scope.fieldsTosave["total_primera_cuota"] = $scope.totalPrimeraCuota;

            mixpanel.track("Cotizacion Usuario",{
              "tipo": $rootScope.title,
              "user": $rootScope.user.data.name,
              "email": $rootScope.user.data.email,
              "cliente": $scope.clientInfo.name+" "+$scope.clientInfo.lastName,
              "cliente email": $scope.clientInfo.mail
            });

            $rootScope.load = true;
            var registro = Registro;
            $scope.registro = registro;
            $scope.registro.save({
              "IDUs": $rootScope.user.data.id,
              "IDCa": 1,
              "Keys": JSON.stringify( $scope.fieldsTosave )
            }).then(function(r) {
              console.log(r);
              console.log($rootScope);
              $idnewPost = r.data.split("|")[1];
              $scope.idnewPost = $idnewPost;
              $rootScope.load = false;
            }, function(error) {

            });

          }
        }
        $scope.alert.show = false;

      }else{
        $scope.alert.msgAlert = "Todos los campos son requeridos";
        $scope.alert.show = true;
        $rootScope.alert.check = false;
      }
    };

    //  $scope.registrosUpdate = function(Estado) {
    //   $rootScope.load = true;
    //   $scope.registro.update({
    //     // "IDUs": 1,
    //     "IDUs": $rootScope.user.data.id,
    //     "IDPost": $scope.datosPrestamoSeleted.ID,
    //     "estado": Estado
    //   }).then(function(r) {
    //     $rootScope.load = false;
    //     $scope.listaCotizaciones[$scope.historialSelect].class = Estado.toLowerCase().split(" ").join("-");
    //   }, function(error) {

    //   });
    // };

    $scope.finalizar = function () {
      $state.go('Consultor');
    };

    $scope.listaCotizaciones = [];
    $scope.getPostByID = function($id){
      $scope.registro.getPostByID({
        "idPost": $idnewPost,
      }).then(function(r) {
        console.log(r);
        // var newArra = r.concat($rootScope.scopeCosultor.listaCotizaciones);
        // $rootScope.scopeCosultor.listaCotizaciones = newArra;
        $scope.listaCotizaciones.unshift(r.data[0]);
        console.log($scope.listaCotizaciones);

        $scope.detailsOpen(0);
        $scope.mailclient();

        $rootScope.load = false;
      }, function(error) {

      });
    }

    $scope.sendmailCotizacion = function(){
      $rootScope.load = true;
      $scope.getPostByID();
    };



    $rootScope.newCotiuser = function () {
      $rootScope.clientInfo = {
        lastName: $scope.clientInfo.lastName,
        mail: $scope.clientInfo.mail,
        cell: $scope.clientInfo.cell,
        name: $scope.clientInfo.name
      }
      angular.element(".a-return").show();
      $state.go("Consultor.tipoPrestamo");
    };
    $scope.registrosUpdate = function(Estado) {
      console.log(Estado);
      console.log($scope.idnewPost);
      $rootScope.load = true;
      $scope.registro.update({
        // "IDUs": 1,
        "IDUs": $rootScope.user.data.id,
        "IDPost": $scope.idnewPost,
        "estado": Estado
      }).then(function(r) {
        $rootScope.load = false;
        $scope.finalizar();
      }, function(error) {
        console.log(error);
      });
    };






  function remove_character(k){
    if(typeof k == "string" ){
      k = k.replaceAll("_"," ");
      k = k.slice(0, 1).toUpperCase() + k.slice(1);
    }
    return k;
  }
  $scope.getUsersMail = function() {
    $rootScope.load = true;
    $scope.registro.getUsers({
      "IDUs": $scope.datosPrestamoSeleted.post_author,
    }).then(function(r) {
      $scope.sendMail();
    }, function(error) {

    });
  };
  $scope.sendMail = function(){
    $scope.mailObject = {
      asesor: $scope.user,
      cliente: $scope.datosPrestamoSeleted.PersonalArray,
      head: {
        titulo1: "Resultados",
        titulo2: $scope.datosPrestamoSeleted.category
      },
      rows: $scope.datosPrestamoSeleted.fieldsArray,
      footer: ($scope.datosPrestamoSeleted.summaryArray2[1].data.length == 0)? undefined: $scope.datosPrestamoSeleted.summaryArray2[1].data
    };
    console.log($scope.mailObject);
    $scope.registro.mail({
      "datosTabla": JSON.stringify( $scope.mailObject ),
    }).then(function(r) {
      console.log(r);
      $rootScope.load = false;
    }, function(error) {
      console.log(error);
      $rootScope.load = false;
    });
  }
  $scope.mailclient = function() {
    $scope.sendMail();
    $rootScope.okmail();
    mixpanel.track("Envio de correo Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
      "cliente": $scope.datosPrestamoSeleted.PersonalArray[0].value+" "+$scope.datosPrestamoSeleted.PersonalArray[1].value,
      "cliente email": $scope.datosPrestamoSeleted.PersonalArray[2].value
    });
  };

  $scope.historialSelect = 0;
  $scope.detailsOpen = function ($index) {
    $scope.details = true;
    $scope.datosPrestamoSeleted = $scope.listaCotizaciones[$index];
    $scope.historialSelect = $index;

    $rootScope.titleResultados = $scope.datosPrestamoSeleted.category;

    $scope.datosPrestamoSeleted.fieldsArray = [];
    $scope.datosPrestamoSeleted.PersonalArray = [];
    $scope.datosPrestamoSeleted.summaryArray = [];
    $scope.datosPrestamoSeleted.summaryArray2 = [];

    $scope.datosPrestamoSeleted.summaryArray[0] = {};
    $scope.datosPrestamoSeleted.summaryArray[0].data = [];
    $scope.datosPrestamoSeleted.summaryArray[1] = {};
    $scope.datosPrestamoSeleted.summaryArray[1].data = [];
    $scope.datosPrestamoSeleted.summaryArray[2] = {};
    $scope.datosPrestamoSeleted.summaryArray[2].data = [];

    $scope.datosPrestamoSeleted.summaryArray2[1] = {};
    $scope.datosPrestamoSeleted.summaryArray2[1].data = [];
    // $scope.datosPrestamoSeleted.summaryArray2[1].data[0] = { name:"Primera Cuota", value:"" };
    $scope.datosPrestamoSeleted.summaryArray2[1].title = "";

    for(var k in $scope.datosPrestamoSeleted.fields){
      var d = $scope.datosPrestamoSeleted.fields[k];
      if( k.trim() != "_edit_lock" ){
        if( k.trim() == "apellido_del_cliente" ||
            k.trim() == "celular_del_cliente" ||
            k.trim() == "nombre_del_cliente" ||
            k.trim() == "email_del_cliente" ){
          $scope.datosPrestamoSeleted.PersonalArray[$scope.datosPrestamoSeleted.PersonalArray.length] = {
            name: remove_character(k),
            value: d
          }
        }else{
          if( $scope.datosPrestamoSeleted.category == "Préstamo Personal" ){
            if( k.trim() == "cuota" || k.trim() == "cuota_protegida" || k.trim() == "cuota_+_vida"  ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: (k.trim() == "cuota")?'Cuota Sin Seguro CP':(k.trim() == "cuota_+_vida")?'Total Cuota + CP':remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "monto" || k.trim() == "edad" || k.trim() == "plazo_meses" || k.trim() == "fecha_desembolso" || k.trim() == "fecha_desembolso" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "DATOS DEL CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "capital" || k.trim() == "intereses" || k.trim() == "seguro_de_vida" || k.trim() == "total_primera_cuota" || k.trim() == "tasa_periodica_m_v" || k.trim() == "equivalencia_tasa_nominal_m_v" || k.trim() == "equivalencia_tasa_efectiva_anual" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
                if( k.trim() == "seguro_de_vida" ){
                  // $scope.datosPrestamoSeleted.summaryArray2[1].title = "Primera Cuota";
                  $scope.datosPrestamoSeleted.summaryArray2[1].data[$scope.datosPrestamoSeleted.summaryArray2[1].data.length] = {
                    name: remove_character(k),
                    value: d
                  }
                }
              }else if( k.trim() == "cuota_sin_seguro_cp" || k.trim() == "cuota_protegida" || k.trim() == "prima_seguro_por_millon" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vivienda" ) {
            if( k.trim() == "cuota" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "valor_del_inmueble" || k.trim() == "cuota_inicial" || k.trim() == "valor_leasing_o_credito_hipotecario" || k.trim() == "plazo_en_meses" || k.trim() == "opcion_de_compra" || k.trim() == "opcion_de_compra_t" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tipo_tasa" || k.trim() == "d_t_f_t_a" || k.trim() == "d_t_f__+" || k.trim() == "tasa_e_a" || k.trim() == "tasa_m_v" || k.trim() == "tasa_fija" || k.trim() == "tasa" || k.trim() == "vivienda_protegida" || k.trim() == "vivienda_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguros" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Tradicional" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo 14 Cuotas" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Premium" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" || k.trim() == "total_abono_a_capital" || k.trim() == "promedio_abono_capital_con_t_g" || k.trim() == "mes_6" || k.trim() == "mes_9" || k.trim() == "mes_12" || k.trim() == "mes_18" || k.trim() == "mes_24" || k.trim() == "mes_32" || k.trim() == "mes_36" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }
        }
      }
    }

  };


}]);

app.controller('prestamoVehiculo1Controller', ['$rootScope', '$scope', '$template', 'User', '$state', 'Registro', function($rootScope, $scope, $template, User, $state, Registro) {

    $rootScope.title = "VEHÍCULO TRADICIONAL";
    $rootScope.simulador = true;
    $scope.sub = false;
    $rootScope.pagesActive = true;
    $rootScope.pagesNumber = '1/4';
    $step = 0;
    $scope.$rootScope = $rootScope;

    $scope.p1 = true;
    $scope.p2 = false;
    $scope.p3 = false;
    $scope.p4 = false;

    $scope.datos1 = {};
    $scope.datos2 = {};
    $scope.datos3 = {};
    $scope.datos4 = {};

    $scope.datos1.polizaColectiva = "SI";
    $scope.datos1.tranquilidadGlobal = "SI";

    $scope.datos2.tasaperiodica = 1;
    $scope.datos2.tasaMV = 0;
    $scope.datos3.tasa = 0;
    $scope.datos3.tranquilidadGloblafield = "$0";

    String.prototype.replaceAll = function(target, replacement) {
      return this.split(target).join(replacement);
    };

    Number.prototype.formatMoney = function(c, d, t){
    var n = this,
        c = isNaN(c = Math.abs(c)) ? 0 : c,
        d = d == undefined ? "," : d,
        t = t == undefined ? "." : t,
        s = n < 0 ? "-" : "",
        i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
        j = (j = i.length) > 3 ? j % 3 : 0;
       return "$" + s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
     };

    function moneyInt($n){
      $n = parseFloat($n.slice(1).replaceAll(".",""));
      return $n;
    }

    $scope.tranqulidad_global = function () {
      console.log(6);
      if( $scope.datos2.tranquilidadglobal == "TG" || $scope.datos2.tranquilidadglobal == undefined){
       $scope.datos3.tranquilidadGloblafield = (( moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida) + moneyInt($scope.datos3.polizaColectivaField) ) * $scope.datos2.plazoMes ) * 0.0769;
      }else if( $scope.datos2.tranquilidadglobal == "CPT"){
        // $scope.datos3.tranquilidadGloblafield = $scope.datos2.plazoMes * ( moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida) + moneyInt($scope.datos3.polizaColectivaField) ) * (0.0603 / 1000) * 10000;
        $scope.datos3.tranquilidadGloblafield = Math.ceil( $scope.datos2.plazoMes * 495000 / 1000 ) * 100;
      }else if( $scope.datos2.tranquilidadglobal == "CPM"){
       $scope.datos3.tranquilidadGloblafield = $scope.datos2.plazoMes * (moneyInt($scope.datos3.polizaColectivaField) + moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida)) * ((6.188/100) / 1000) * 1000;
      }
      // var n = $scope.datos3.tranquilidadGloblafield.toFixed();
      // n = n.toString();
      // if( n.slice(-4) >= 5000 ){
      //   if( parseInt(n.slice(-5,-4)) == 9 ){
      //     n = n.slice(0,n.length-5) + (parseInt(n.slice(-5,-4)) + 1) + '000';
      //   }else{
      //     n = n.slice(0,n.length-5) + (parseInt(n.slice(-5,-4)) + 1) + '0000';
      //   }
      // }else{
      // 	n = n.slice(0,n.length-4) + '0000';
      // }
      // $scope.datos3.tranquilidadGloblafield = parseInt(n);
      $scope.datos3.tranquilidadGloblafield = $scope.datos3.tranquilidadGloblafield.formatMoney();
    }

    $scope.tasafinal = function () {
      if( $scope.datos2.tipoCliente == "CB" && $scope.datos2.tipoPlan == "CO"){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.04;
      }else if( $scope.datos2.tipoCliente == "CB" && $scope.datos2.tipoPlan == "CD" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.06;
      }else if( $scope.datos2.tipoCliente == "CN" && $scope.datos2.tipoPlan == "CO" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.02;
      }else if( $scope.datos2.tipoCliente == "CN" && $scope.datos2.tipoPlan == "CD" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.05;
      }else if( $scope.datos2.tipoCliente == undefined && $scope.datos2.tipoPlan == undefined ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario);
      }else if( $scope.datos2.tipoCliente == "E" && $scope.datos2.tipoPlan == "P" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario);
      }
      $scope.datos3.tasafinalCliente = ( typeof $scope.datos3.tasafinalCliente == 'string') ? $scope.datos3.tasafinalCliente : $scope.datos3.tasafinalCliente.toFixed(2);
      $scope.datos3.tasafinalCliente = $scope.datos3.tasafinalCliente.toString().slice(0, 4) + "%";
    };

    $scope.prevNew = function(){
      if ( $step > 0){
        $step--;
        $scope.p1 = false;
        $scope.p2 = false;
        $scope.p3 = false;
        $scope.p4 = false;
        if( $step == 0 ){
          $scope.p1 = true;
          $rootScope.pagesNumber = '1/4';
        }else if( $step == 1 ){
          $scope.p2 = true;
          $rootScope.pagesNumber = '2/4';
        }else if( $step == 2 ){
          $scope.p3 = true;
          $rootScope.pagesNumber = '3/4';
        }
      }else{
        $rootScope.prev = $scope.saveprev;
        $state.go('Consultor.tipoPrestamo');
      }
    };

    $scope.saveprev = $rootScope.prev;
    $rootScope.prev = $scope.prevNew;

    function PMT(rate, nper, pv, fv, type){
        if (!fv) fv = 0;
        if (!type) type = 0;
        rate = rate / 100;
        if (rate == 0) return -(pv + fv)/nper;
        var pvif = Math.pow(1 + rate, nper);
        pvif = pvif.toFixed(2);
        var pmt = rate / (pvif - 1) * -(pv * pvif + fv);
        if (type == 1) {
          pmt /= (1 + rate);
        };
        return pmt - (pmt * 0.0008);
    }

    $scope.next = function(form){
      if( form.$valid ){
        if ( $step < 3){
          $step++;
          $scope.p1 = false;
          $scope.p2 = false;
          $scope.p3 = false;
          $scope.p4 = false;
          if( $step == 1 ){
            $scope.p2 = true;
            $rootScope.pagesNumber = '2/4';
          }else if( $step == 2 ){
            $scope.p3 = true;
            $rootScope.pagesNumber = '3/4';

            $scope.tasafinal();
            $scope.datos3.segurovida = (moneyInt($scope.datos2.monto) * 885 / 1000000) * (1 + (parseFloat($scope.datos2.estraPrima) / 100));
            console.log($scope.datos2.monto);
            console.log($scope.datos2.estraPrima);

            var porcentaje = parseFloat($scope.datos3.tasafinalCliente);

            var a = ( moneyInt($scope.datos2.monto) * (porcentaje / 100));
            var b = 1 - Math.pow( ((porcentaje / 100)+1), (-$scope.datos2.plazoMes)  );

            $scope.datos3.cuota1 = parseInt(a/b);
            // $scope.datos3.cuota1 = PMT(porcentaje, $scope.datos2.plazoMes, -moneyInt($scope.datos2.monto), 0, 0 );

            $scope.datos3.segurovida = $scope.datos3.segurovida.formatMoney();
            $scope.datos3.cuota1 = $scope.datos3.cuota1.formatMoney();


            if( $scope.datos1.polizaColectiva == 'NO' ){
              $scope.datos3.polizaColectivaField = 0;
              $scope.datos3.polizaColectivaField = $scope.datos3.polizaColectivaField.formatMoney();

              $scope.datos3.tranquilidadGloblafield = 0;
              $scope.datos3.tranquilidadGloblafield = $scope.datos3.tranquilidadGloblafield.formatMoney();
            }

            if( $scope.datos3.polizaColectivaField != undefined ){
              $scope.tranqulidad_global();
            }

          }else if( $step == 3 ){

            $scope.p4 = true;
            if( $scope.datos1.polizaColectiva == 'SI' ){
              $scope.tranquilidad_global_val_mas_monto = moneyInt($scope.datos2.monto) + moneyInt($scope.datos3.tranquilidadGloblafield);
            }else{
              $scope.tranquilidad_global_val_mas_monto = moneyInt($scope.datos2.monto) + 0;
            }

            var porcentaje = parseFloat($scope.datos3.tasafinalCliente);
            var a = ( $scope.tranquilidad_global_val_mas_monto * (porcentaje / 100));
            var b = 1 - Math.pow( ((porcentaje / 100)+1), (-$scope.datos2.plazoMes)  );
            $scope.datos3.cuota1 = parseInt(a/b);
            $scope.datos3.cuota1 = $scope.datos3.cuota1.formatMoney();

            $scope.datos3.segurovida = ($scope.tranquilidad_global_val_mas_monto * 885 / 1000000) * (1 + (parseFloat($scope.datos2.estraPrima) / 100));
            $scope.datos3.segurovida = $scope.datos3.segurovida.formatMoney();

            $scope.totalcuotaMesSeguro = moneyInt($scope.datos3.segurovida) + moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.polizaColectivaField) /*+ (moneyInt($scope.datos3.tranquilidadGloblafield) / $scope.datos2.plazoMes)*/;

            $scope.tranquilidad_global_val_mas_monto = $scope.tranquilidad_global_val_mas_monto.formatMoney();
            $scope.totalcuotaMesSeguro = $scope.totalcuotaMesSeguro.formatMoney();

            $scope.summary = [
              {
                title: "MODELO Y SEGURO",
                fields: [
                  {
                    name: "Modelo Vehículo",
                    val: $scope.datos1.modeloVehiculo,
                    active: true
                  },{
                    name: "Edad Solicitante",
                    val: $scope.datos1.edad,
                    active: true
                  },{
                    name: "Póliza Colectiva",
                    val: $scope.datos1.polizaColectiva,
                    active: true
                  },{
                    name: "Tranquilidad Global",
                    val: ($scope.datos2.tranquilidadglobal == undefined ) ? "TG" : $scope.datos2.tranquilidadglobal,
                    active: ( $scope.datos1.polizaColectiva == 'SI' )
                  }
                ]
              },{
                title: "MONTO Y PLAZO",
                fields: [
                  {
                    name: "Monto",
                    val: $scope.datos2.monto,
                    active: true
                  },{
                    name: "Plazo / meses",
                    val: $scope.datos2.plazoMes,
                    active: true
                  },{
                    name: "Lista concesionario",
                    val: $scope.datos2.listaConcesionario,
                    active: true
                  },{
                    name: "Tipo de Cliente",
                    val: ($scope.datos2.tipoCliente == undefined) ? "Empleado" : $scope.datos2.tipoCliente,
                    active: true
                  },{
                    name: "Tipo de Plan",
                    val: ($scope.datos2.tipoPlan == undefined) ? "Plan Especial" : $scope.datos2.tipoPlan,
                    active: true
                  },{
                    name: "Extra Prima",
                    val: $scope.datos2.estraPrima,
                    active: true
                  }
                ]
              },{
                title: "CUOTA MENSUAL",
                fields: [
                  {
                    name: "Tasa final al cliente",
                    val: $scope.datos3.tasafinalCliente,
                    active: true
                  },{
                    name: "Cuota 1",
                    val: $scope.datos3.cuota1,
                    active: true
                  },{
                    name: "Vida",
                    val: $scope.datos3.segurovida,
                    active: true
                  },{
                    name: "Póliza Colectiva",
                    val: $scope.datos3.polizaColectivaField,
                    active: ( $scope.datos1.polizaColectiva == 'SI' )
                  },{
                    name: "Tranqulidad Global",
                    val: $scope.datos3.tranquilidadGloblafield,
                    active: ( $scope.datos1.polizaColectiva == 'SI' )
                  }
                ]
              },
            ];

            $rootScope.pagesNumber = '4/4';
            $scope.datosPrestamo = [];
            $scope.datosPrestamo = [
              {
                name: "Resultado",
                val: "",
                Subname: "Préstamo Vehículo",
                active: true
              },
              {
                name: ($scope.datos2.tranquilidadglobal == undefined)?'Valor Prima TG': "Valor Prima "+$scope.datos2.tranquilidadglobal,
                val: $scope.datos3.tranquilidadGloblafield,
                active: ( $scope.datos1.polizaColectiva == 'SI' ),
                class: "bottom-color"
              },
              {
                name: ($scope.datos2.tranquilidadglobal == undefined)?'Préstamo (Créd + TG)': "Préstamo (Créd + "+$scope.datos2.tranquilidadglobal+")",
                val: $scope.tranquilidad_global_val_mas_monto,
                active: true
              },
              {
                name: "Cuota mensual",
                val: $scope.datos3.cuota1,
                active: true
              },
              {
                name: "Seguro de Vida",
                val: $scope.datos3.segurovida,
                active: true
              },
              {
                name: "Póliza Colectiva",
                val: ($scope.datos3.polizaColectivaField),
                active: true
              },
              // {
              //   name: "Tranquilidad global",
              //   val: (moneyInt($scope.datos3.tranquilidadGloblafield) / $scope.datos2.plazoMes).formatMoney(),
              //   active: ( $scope.datos1.polizaColectiva == 'SI' )
              // },
              {
                name: "Total cuota + seguros",
                val: $scope.totalcuotaMesSeguro,
                active: true
              }
            ];
            console.log($rootScope);

            $scope.fieldsTosave = {};
            $scope.fieldsTosave["apellido_del_cliente"] = $scope.clientInfo.lastName;
            $scope.fieldsTosave["email_del_cliente"] = $scope.clientInfo.mail;
            $scope.fieldsTosave["celular_del_cliente"] = $scope.clientInfo.cell;
            $scope.fieldsTosave["nombre_del_cliente"] = $scope.clientInfo.name;

            $scope.fieldsTosave["edad_solicitante"] = $scope.datos1.edad;
            $scope.fieldsTosave["seguro_poliza_colectiva"] = ($scope.datos1.polizaColectiva == 'SI');
            $scope.fieldsTosave["modelo_vehiculo"] = $scope.datos1.modeloVehiculo;
            $scope.fieldsTosave["tranquilidad_global"] = ($scope.datos2.tranquilidadglobal == undefined ) ? "TG" : $scope.datos2.tranquilidadglobal;
            $scope.fieldsTosave["monto"] = $scope.datos2.monto;
            $scope.fieldsTosave["plazo_meses"] = $scope.datos2.plazoMes;
            $scope.fieldsTosave["tasa_lista_concesionario"] = $scope.datos2.listaConcesionario;
            $scope.fieldsTosave["extraprima"] = $scope.datos2.estraPrima;
            $scope.fieldsTosave["tipo_de_cliente"] = ($scope.datos2.tipoCliente == undefined) ? "Empleado" : $scope.datos2.tipoClient;
            $scope.fieldsTosave["tipo_de_plan"] = ($scope.datos2.tipoPlan == undefined) ? "Plan Especial" : $scope.datos2.tipoPlan;
            $scope.fieldsTosave["cuota_1"] = $scope.datos3.cuota1;
            $scope.fieldsTosave["seguro_de_vida"] = $scope.datos3.segurovida;
            $scope.fieldsTosave["poliza_colectiva"] = $scope.datos3.polizaColectivaField;
            $scope.fieldsTosave["tranquilidad_global_"] = $scope.datos3.tranquilidadGloblafield;
            $scope.fieldsTosave["tasa_final_al_cliente"] = $scope.datos3.tasafinalCliente;
            $scope.fieldsTosave["total_prestamo"] = $scope.tranquilidad_global_val_mas_monto;
            $scope.fieldsTosave["total_cuota_mensual_+_seguros"] = $scope.totalcuotaMesSeguro;

            mixpanel.track("Cotizacion Usuario",{
              "tipo": $rootScope.title,
              "user": $rootScope.user.data.name,
              "email": $rootScope.user.data.email,
              "cliente": $scope.clientInfo.name+" "+$scope.clientInfo.lastName,
              "cliente email": $scope.clientInfo.mail
            });


            //angular.element(".a-return").hide();
            $rootScope.load = true;
            var registro = Registro;
            $scope.registro = registro;
            $scope.registro.save({
              "IDUs": $rootScope.user.data.id,
              "IDCa": 2.1,
              "Keys": JSON.stringify( $scope.fieldsTosave )
            }).then(function(r) {
              $idnewPost = r.data.split("|")[1];
              $scope.idnewPost = $idnewPost;
              $rootScope.load = false;
            }, function(error) {

            });

          }
        }
        $scope.alert.show = false;
      }else{
        $scope.alert.msgAlert = "Todos los campos son requeridos";
        $scope.alert.show = true;
        $rootScope.alert.check = false;
      }
    };


    $scope.finalizar = function () {
      $state.go('Consultor');
    };

    $scope.listaCotizaciones = [];
    $scope.getPostByID = function($id){
      $scope.registro.getPostByID({
        "idPost": $idnewPost,
      }).then(function(r) {
        $scope.listaCotizaciones.unshift(r.data[0]);

        $scope.detailsOpen(0);
        $scope.mailclient();
        $rootScope.okmail();

        $rootScope.load = false;
      }, function(error) {

      });
    }

    $scope.sendmailCotizacion = function(){
      $rootScope.load = true;
      $scope.getPostByID();
    };








    $rootScope.newCotiuser = function () {
      $rootScope.clientInfo = {
        lastName: $scope.clientInfo.lastName,
        mail: $scope.clientInfo.mail,
        cell: $scope.clientInfo.cell,
        name: $scope.clientInfo.name
      }
      angular.element(".a-return").show();
      $state.go("Consultor.tipoPrestamo");
    };
    $scope.registrosUpdate = function(Estado) {
      console.log(Estado);
      console.log($scope.idnewPost);
      $rootScope.load = true;
      $scope.registro.update({
        // "IDUs": 1,
        "IDUs": $rootScope.user.data.id,
        "IDPost": $scope.idnewPost,
        "estado": Estado
      }).then(function(r) {
        $rootScope.load = false;
        $scope.finalizar();
      }, function(error) {
        console.log(error);
      });
    };






  function remove_character(k){
    if(typeof k == "string" ){
      k = k.replaceAll("_"," ");
      k = k.slice(0, 1).toUpperCase() + k.slice(1);
    }
    return k;
  }
  $scope.getUsersMail = function() {
    $rootScope.load = true;
    $scope.registro.getUsers({
      "IDUs": $scope.datosPrestamoSeleted.post_author,
    }).then(function(r) {
      $scope.sendMail();
    }, function(error) {

    });
  };
  $scope.sendMail = function(){
    $scope.mailObject = {
      asesor: $scope.user,
      cliente: $scope.datosPrestamoSeleted.PersonalArray,
      head: {
        titulo1: "Resultados",
        titulo2: $scope.datosPrestamoSeleted.category
      },
      rows: $scope.datosPrestamoSeleted.fieldsArray
    };
    console.log($scope.mailObject);
    $scope.registro.mail({
      "datosTabla": JSON.stringify( $scope.mailObject ),
    }).then(function(r) {
      console.log(r);
      $rootScope.load = false;
    }, function(error) {
      console.log(error);
      $rootScope.load = false;
    });
  }
  $scope.mailclient = function() {
    $scope.sendMail();
    mixpanel.track("Envio de correo Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
      "cliente": $scope.datosPrestamoSeleted.PersonalArray[0].value+" "+$scope.datosPrestamoSeleted.PersonalArray[1].value,
      "cliente email": $scope.datosPrestamoSeleted.PersonalArray[2].value
    });
  };

  $scope.historialSelect = 0;
  $scope.detailsOpen = function ($index) {
    $scope.details = true;
    $scope.datosPrestamoSeleted = $scope.listaCotizaciones[$index];
    $scope.historialSelect = $index;

    $rootScope.titleResultados = $scope.datosPrestamoSeleted.category;

    $scope.datosPrestamoSeleted.fieldsArray = [];
    $scope.datosPrestamoSeleted.PersonalArray = [];
    $scope.datosPrestamoSeleted.summaryArray = [];

    $scope.datosPrestamoSeleted.summaryArray[0] = {};
    $scope.datosPrestamoSeleted.summaryArray[0].data = [];
    $scope.datosPrestamoSeleted.summaryArray[1] = {};
    $scope.datosPrestamoSeleted.summaryArray[1].data = [];
    $scope.datosPrestamoSeleted.summaryArray[2] = {};
    $scope.datosPrestamoSeleted.summaryArray[2].data = [];

    for(var k in $scope.datosPrestamoSeleted.fields){
      var d = $scope.datosPrestamoSeleted.fields[k];
      if( k.trim() != "_edit_lock" ){
        if( k.trim() == "apellido_del_cliente" ||
            k.trim() == "celular_del_cliente" ||
            k.trim() == "nombre_del_cliente" ||
            k.trim() == "email_del_cliente" ){
          $scope.datosPrestamoSeleted.PersonalArray[$scope.datosPrestamoSeleted.PersonalArray.length] = {
            name: remove_character(k),
            value: d
          }
        }else{
          if( $scope.datosPrestamoSeleted.category == "Préstamo Personal" ){
            if( k.trim() == "cuota" || k.trim() == "cuota_protegida" || k.trim() == "vida" || k.trim() == "cuota_+_vida" || k.trim() == "seguro_de_vida"  ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d,
                active: (k.trim() == "seguro_de_vida")?'active':undefined
              }
            }else{
              if( k.trim() == "monto" || k.trim() == "edad" || k.trim() == "plazo_meses" || k.trim() == "fecha_desembolso" || k.trim() == "fecha_desembolso" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "DATOS DEL CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "capital" || k.trim() == "intereses" || k.trim() == "seguro_de_vida" || k.trim() == "total_primera_cuota" || k.trim() == "tasa_periodica_m_v" || k.trim() == "equivalencia_tasa_nominal_m_v" || k.trim() == "equivalencia_tasa_efectiva_anual" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguro_cp" || k.trim() == "cuota_protegida" || k.trim() == "prima_seguro_por_millon" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vivienda" ) {
            if( k.trim() == "cuota" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "valor_del_inmueble" || k.trim() == "cuota_inicial" || k.trim() == "valor_leasing_o_credito_hipotecario" || k.trim() == "plazo_en_meses" || k.trim() == "opcion_de_compra" || k.trim() == "opcion_de_compra_t" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tipo_tasa" || k.trim() == "d_t_f_t_a" || k.trim() == "d_t_f__+" || k.trim() == "tasa_e_a" || k.trim() == "tasa_m_v" || k.trim() == "tasa_fija" || k.trim() == "tasa" || k.trim() == "vivienda_protegida" || k.trim() == "vivienda_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguros" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Tradicional" ) {
            if( k.trim() == "tranquilidad_global" ){
              tranquilidad_global = d;
            }
            if( k.trim() == "total_prestamo" || k.trim() == "tranquilidad_global_" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: ( k.trim() == "tranquilidad_global_" ) ? 'Valor Prima '+tranquilidad_global : ( k.trim() == "total_cuota_mensual_+_seguros" ) ? 'Total Cuota Mensual + Seguros' : ( k.trim() == "poliza_colectiva" ) ? 'Póliza Colectiva' : ( k.trim() == "cuota_1" ) ? 'Cuota mensual' : ( k.trim() == "total_prestamo" ) ? 'Préstamo (Créd + '+tranquilidad_global+')' : remove_character(k),
                value: d,
                class: ( k.trim() == "tranquilidad_global_val" ) ? 'bottom-color' : ''
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo 14 Cuotas" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Premium" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" || k.trim() == "total_abono_a_capital" || k.trim() == "promedio_abono_capital_con_t_g" || k.trim() == "mes_6" || k.trim() == "mes_9" || k.trim() == "mes_12" || k.trim() == "mes_18" || k.trim() == "mes_24" || k.trim() == "mes_32" || k.trim() == "mes_36" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }
        }
      }
    }

    var otherArray = [];
    for(var i = 0; i < $scope.datosPrestamoSeleted.fieldsArray.length; i++){
      var d = $scope.datosPrestamoSeleted.fieldsArray[i];
      if( d.name.search("Total") != -1 ){
        otherArray.splice($scope.datosPrestamoSeleted.fieldsArray.length, 0, d);
      }else if( d.name.search("Valor Prima") != -1 ){
        otherArray.splice(0, 0, d);
      }else if( d.name.search("Préstamo ") != -1 ){
        otherArray.splice(1, 0, d);
      }else if( d.name.search("Seguro de") != -1 ){
        otherArray.splice(2, 0, d);
      }else{
        otherArray[i] = d;
      }
    }
    $scope.datosPrestamoSeleted.fieldsArray = otherArray;
  };


}]);

app.controller('prestamoVehiculo2Controller', ['$rootScope', '$scope', '$template', 'User', '$state', 'Registro', function($rootScope, $scope, $template, User, $state, Registro) {

    $rootScope.title = "14 cuotas";
    $rootScope.simulador = true;
    $scope.sub = false;
    $rootScope.pagesActive = true;
    $rootScope.pagesNumber = '1/5';
    $step = 0;
    $scope.$rootScope = $rootScope;

    $scope.p1 = true;
    $scope.p2 = false;
    $scope.p3 = false;
    $scope.p4 = false;
    $scope.p5 = false;

    $scope.datos1 = {};
    $scope.datos2 = {};
    $scope.datos3 = {};
    $scope.datos4 = {};

    $scope.datos2.tasaperiodica = 1;
    $scope.datos2.tasaMV = 0;
    $scope.datos3.tasa = 0;


    $scope.datos1.polizaColectiva = "SI";
    $scope.datos1.tranquilidadGlobal = "SI";
    $scope.datos3.tranquilidadGloblafield = 0;

    $scope.datos2.tasaperiodica = 1;
    $scope.datos2.tasaMV = 0;
    $scope.datos3.tasa = 0;

    $scope.datos2.mesExtracuota1 = "ENERO";
    $scope.datos2.mesExtracuota2 = "ENERO";

    var arrayMeses = [ "ENERO", "FEBRERO", 'MARZO', "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE" ];
    var arrayMeVal = [ (1.08/100), (2.14/100), (2.14/100), (2.14/100), (1.08/100), (1.08/100), (1.08/100), (1.08/100), (1.08/100), (1.08/100), (1.08/100), (1.08/100) ];

    String.prototype.replaceAll = function(target, replacement) {
      return this.split(target).join(replacement);
    };

    Number.prototype.formatMoney = function(c, d, t){
    var n = this,
        c = isNaN(c = Math.abs(c)) ? 0 : c,
        d = d == undefined ? "," : d,
        t = t == undefined ? "." : t,
        s = n < 0 ? "-" : "",
        i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
        j = (j = i.length) > 3 ? j % 3 : 0;
       return "$" + s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
     };

    function moneyInt($n){
      $n = parseFloat($n.slice(1).replaceAll(".",""));
      return $n;
    }

    $scope.tranqulidad_global = function () {
      if( $scope.datos2.tranquilidadglobal == undefined ){
       // $scope.datos3.tranquilidadGloblafield = $scope.datos2.plazoMes * ( moneyInt($scope.datos3.polizaColectivaField) + moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida)) * (103 / 100)  * ( (7.5/100)/1000 ) * 1000;
       $scope.datos3.tranquilidadGloblafield = ( moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida) + moneyInt($scope.datos3.polizaColectivaField) ) * $scope.datos2.plazoMes * (7.5 / 100) ;
      }else if( $scope.datos2.tranquilidadglobal == "TG"){
       $scope.datos3.tranquilidadGloblafield = ( moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida) + moneyInt($scope.datos3.polizaColectivaField) ) * $scope.datos2.plazoMes * (7.5 / 100) ;
      }else if( $scope.datos2.tranquilidadglobal == "CPT"){
      //  $scope.datos3.tranquilidadGloblafield = $scope.datos2.plazoMes * (47.000 / 1000) * 1000000;
       $scope.datos3.tranquilidadGloblafield = $scope.datos2.plazoMes * ( moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida) + moneyInt($scope.datos3.polizaColectivaField) ) * (0.0603 / 1000) * 10000;
      }else if( $scope.datos2.tranquilidadglobal == "CPM"){
       $scope.datos3.tranquilidadGloblafield = $scope.datos2.plazoMes * (moneyInt($scope.datos3.polizaColectivaField) + moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida)) * ((6.03/100) / 1000) * 1000;
      }
      var n = $scope.datos3.tranquilidadGloblafield.toString();
      n = n.split('.')[0];
      if( parseInt(n.slice(-3)) > 500 && n.length >= 4 ){
        $scope.datos3.tranquilidadGloblafield = n.slice(0, n.length-4) + (parseInt(n.slice(-4, -3))+1) + '00';
        $scope.datos3.tranquilidadGloblafield = parseInt($scope.datos3.tranquilidadGloblafield);
      }else if( parseInt(n.slice(-3)) < 500 ){
        $scope.datos3.tranquilidadGloblafield = n.slice(0, n.length-3) + '00';
        $scope.datos3.tranquilidadGloblafield = parseInt($scope.datos3.tranquilidadGloblafield);
      }
      $scope.datos3.tranquilidadGloblafield = $scope.datos3.tranquilidadGloblafield.formatMoney();
    }

    $scope.tasafinal = function () {
      if( $scope.datos2.tipoCliente == "CB" && $scope.datos2.tipoPlan == "CO"){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.04;
      }else if( $scope.datos2.tipoCliente == "CB" && $scope.datos2.tipoPlan == "CD" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.06;
      }else if( $scope.datos2.tipoCliente == "CN" && $scope.datos2.tipoPlan == "CO" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.02;
      }else if( $scope.datos2.tipoCliente == "CN" && $scope.datos2.tipoPlan == "CD" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.05;
      }else if( $scope.datos2.tipoCliente == undefined && $scope.datos2.tipoPlan == undefined ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario);
      }else if( $scope.datos2.tipoCliente == "E" && $scope.datos2.tipoPlan == "P" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario);
      }
      $scope.datos3.tasafinalCliente = ( typeof $scope.datos3.tasafinalCliente == 'string') ? $scope.datos3.tasafinalCliente : $scope.datos3.tasafinalCliente.toFixed(2);
      $scope.datos3.tasafinalCliente = $scope.datos3.tasafinalCliente.toString().slice(0, 4) + "%";
    };

    $scope.prevNew = function(){
      console.log($step);
      if ( $step > 0){
        $step--;
        $scope.p1 = false;
        $scope.p2 = false;
        $scope.p3 = false;
        $scope.p4 = false;
        $scope.p5 = false;
        if( $step == 0 ){
          $scope.p1 = true;
          $rootScope.pagesNumber = '1/5';
        }else if( $step == 1 ){
          $scope.p2 = true;
          $rootScope.pagesNumber = '2/5';
        }else if( $step == 2 ){
          $scope.p3 = true;
          $rootScope.pagesNumber = '3/5';
        }else if( $step == 3 ){
          $scope.p4 = true;
          $rootScope.pagesNumber = '4/5';
        }else if( $step == 4 ){
          $scope.p5 = true;
          $rootScope.pagesNumber = '5/5';
        }
      }else{
        $rootScope.prev = $scope.saveprev;
        $state.go('Consultor.tipoPrestamo');
      }
    };

    $scope.saveprev = $rootScope.prev;
    $rootScope.prev = $scope.prevNew;

    function PMT(rate, nper, pv, fv, type){
        if (!fv) fv = 0;
        if (!type) type = 0;
        rate = rate / 100;
        if (rate == 0) return -(pv + fv)/nper;
        var pvif = Math.pow(1 + rate, nper);
        pvif = pvif.toFixed(2);
        var pmt = rate / (pvif - 1) * -(pv * pvif + fv);
        if (type == 1) {
          pmt /= (1 + rate);
        };
        return pmt - (pmt * 0.0008);
    }

    $scope.next = function(form){
      if( form.$valid ){
        if ( $step < 5){
          $step++;
          $scope.p1 = false;
          $scope.p2 = false;
          $scope.p3 = false;
          $scope.p4 = false;
          $scope.p5 = false;
          if( $step == 1 ){
            $scope.p2 = true;
            $rootScope.pagesNumber = '2/5';
          }else if( $step == 2 ){
            $scope.p3 = true;
            $rootScope.pagesNumber = '3/5';
            $scope.tasafinal();
          }else if( $step == 3 ){
            $scope.p4 = true;
            $rootScope.pagesNumber = '4/5';

            // $scope.tranqulidad_global();
            $scope.datos3.segurovida = (moneyInt($scope.datos2.monto) * 885 / 1000000) * (1 + (parseFloat($scope.datos2.estraPrima) / 100));

            var porcentaje = parseFloat($scope.datos3.tasafinalCliente);

            var a = ( moneyInt($scope.datos2.monto) * (porcentaje / 100));
            var b = 1 - Math.pow( ((porcentaje / 100)+1), (-$scope.datos2.plazoMes)  );

            var indexMes1 = arrayMeses.indexOf($scope.datos2.mesExtracuota1);
            var indexMes2 = arrayMeses.indexOf($scope.datos2.mesExtracuota2);
            // $scope.sumatotia = ( (moneyInt($scope.datos3.montoExtracuota1) * arrayMeVal[indexMes1]) / ($scope.datos2.plazoMes*1000) ) + ( (moneyInt($scope.datos3.montoExtracuota2) * arrayMeVal[indexMes2]) / ($scope.datos2.plazoMes*1000) ) ;
            $scope.sumatotia = ( (moneyInt($scope.datos3.montoExtracuota1) * (1.90/100) ) / ($scope.datos2.plazoMes*1000) ) + ( (moneyInt($scope.datos3.montoExtracuota2) * (2.14/100) ) / ($scope.datos2.plazoMes*1000) ) ;
            $scope.sumatotia = $scope.sumatotia * 1000000;
            // $scope.datos3.cuota1 = PMT(porcentaje, $scope.datos2.plazoMes, -moneyInt($scope.datos2.monto), 0, 0 );
            // $scope.datos3.cuota1 = ( (moneyInt($scope.datos2.monto) * parseFloat($scope.datos2.listaConcesionario)) / $scope.datos2.plazoMes ) - $scope.sumatotia;
            $scope.datos3.cuota1 = parseInt($scope.sumatotia);

            $scope.datos3.segurovida = $scope.datos3.segurovida.formatMoney();
            $scope.datos3.cuota1 = $scope.datos3.cuota1.formatMoney();

            if( $scope.datos1.polizaColectiva == 'NO' ){
              $scope.datos3.polizaColectivaField = 0;
              $scope.datos3.polizaColectivaField = $scope.datos3.polizaColectivaField.formatMoney();

              $scope.datos3.tranquilidadGloblafield = 0;
              $scope.datos3.tranquilidadGloblafield = $scope.datos3.tranquilidadGloblafield.formatMoney();
            }

            if( $scope.datos3.polizaColectivaField != undefined ){
              $scope.tranqulidad_global();
            }

          }else if( $step == 4 ){
            // angular.element(".a-return").hide();
            $scope.p5 = true;
            $rootScope.pagesNumber = '5/5';

            $scope.totalcuotaMesSeguro = moneyInt($scope.datos2.monto) + moneyInt($scope.datos3.tranquilidadGloblafield);

            var porcentaje = parseFloat($scope.datos3.tasafinalCliente);
            $scope.datos3.cuota1 = PMT(porcentaje, $scope.datos2.plazoMes, -$scope.totalcuotaMesSeguro, 0, 0 );
            $scope.datos3.cuota1 = $scope.datos3.cuota1.formatMoney();

            $scope.datos3.segurovida = ($scope.totalcuotaMesSeguro * 885 / 1000000) * (1 + (parseFloat($scope.datos2.estraPrima) / 100));
            $scope.datos3.segurovida = $scope.datos3.segurovida.formatMoney();

            $scope.tranquilidad_global_val_mas_monto = moneyInt($scope.datos3.segurovida) + moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.polizaColectivaField) /*+ (moneyInt($scope.datos3.tranquilidadGloblafield) / $scope.datos2.plazoMes)*/;

            $scope.tranquilidad_global_val_mas_monto = $scope.tranquilidad_global_val_mas_monto.formatMoney();
            $scope.totalcuotaMesSeguro = $scope.totalcuotaMesSeguro.formatMoney();

            $scope.summary = [
              {
                title: "MODELO Y SEGURO",
                fields: [
                  {
                    name: "Modelo Vehículo",
                    val: $scope.datos1.modeloVehiculo,
                    active: true
                  },{
                    name: "Edad Solicitante",
                    val: $scope.datos1.edad,
                    active: true
                  },{
                    name: "Póliza Colectiva",
                    val: $scope.datos1.polizaColectiva,
                    active: true
                  },{
                    name: "Tranquilidad Global",
                    val: ($scope.datos1.tranquilidadglobal == undefined ) ? "TG" : $scope.datos1.tranquilidadglobal,
                    active: ( $scope.datos1.polizaColectiva == 'SI' )
                  }
                ]
              },{
                title: "MONTO Y PLAZO",
                fields: [
                  {
                    name: "Monto",
                    val: $scope.datos2.monto,
                    active: true
                  },{
                    name: "Plazo / meses",
                    val: $scope.datos2.plazoMes,
                    active: true
                  },{
                    name: "Lista concesionario",
                    val: $scope.datos2.listaConcesionario,
                    active: true
                  },{
                    name: "Tipo de Cliente",
                    val: ($scope.datos2.tipoCliente == undefined) ? "Empleado" : $scope.datos2.tipoCliente,
                    active: true
                  },{
                    name: "Tipo de Plan",
                    val: ($scope.datos2.tipoPlan == undefined) ? "Plan Especial" : $scope.datos2.tipoPlan,
                    active: true
                  },{
                    name: "Extra Prima",
                    val: $scope.datos2.estraPrima,
                    active: true
                  },{
                    name: "Tasa final al cliente",
                    val: $scope.datos3.tasafinalCliente,
                    active: true
                  },{
                    name: "Monto Extra cuota 1",
                    val: $scope.datos3.montoExtracuota1,
                    active: true
                  },{
                    name: "Mes Extra cuota 1",
                    val: $scope.datos2.mesExtracuota1,
                    active: true
                  },{
                    name: "Monto Extra cuota 2",
                    val: $scope.datos3.montoExtracuota2,
                    active: true
                  },{
                    name: "Mes Extra cuota 2",
                    val: $scope.datos2.mesExtracuota2,
                    active: true
                  }
                ]
              },{
                title: "CUOTA MENSUAL",
                fields: [
                  {
                    name: "Cuota 1",
                    val: $scope.datos3.cuota1,
                    active: true
                  },{
                    name: "Vida",
                    val: $scope.datos3.segurovida,
                    active: true
                  },{
                    name: "Póliza Colectiva",
                    val: $scope.datos3.polizaColectivaField,
                    active: ( $scope.datos1.polizaColectiva == 'SI' )
                  },{
                    name: "Tranqulidad Global",
                    val: $scope.datos3.tranquilidadGloblafield,
                    active: ( $scope.datos1.polizaColectiva == 'SI' )
                  }
                ]
              },
            ];

            $scope.datosPrestamo = [];
            $scope.datosPrestamo = [
              {
                name: "Resultado",
                val: "",
                Subname: "Préstamo Vehículo",
                active: true
              },{
                name: "Total Préstamo",
                val: $scope.totalcuotaMesSeguro,
                active: true
              },{
                name: "Cuota mensual",
                val: $scope.datos3.cuota1,
                active: true
              },{
                name: "Seguro de vida",
                val: $scope.datos3.segurovida,
                active: true
              },{
                name: "Poliza Colectiva",
                val: $scope.datos3.polizaColectivaField,
                active: ( $scope.datos1.polizaColectiva == 'SI' )
              },
              // {
              //   name: "Tranquilidad global",
              //   val: (moneyInt($scope.datos3.tranquilidadGloblafield) / $scope.datos2.plazoMes).formatMoney(),
              //   active: ( $scope.datos1.polizaColectiva == 'SI' )
              // },
              {
                name: "Total Cuota Mensual + seguros",
                val: $scope.tranquilidad_global_val_mas_monto,
                active: true
              }
            ];
            console.log($rootScope);

            $scope.fieldsTosave = {};
            $scope.fieldsTosave["apellido_del_cliente"] = $scope.clientInfo.lastName;
            $scope.fieldsTosave["email_del_cliente"] = $scope.clientInfo.mail;
            $scope.fieldsTosave["celular_del_cliente"] = $scope.clientInfo.cell;
            $scope.fieldsTosave["nombre_del_cliente"] = $scope.clientInfo.name;

            $scope.fieldsTosave["tasa_lista_concesionario"] = $scope.datos2.listaConcesionario;
            $scope.fieldsTosave["extraprima"] = $scope.datos2.estraPrima;
            $scope.fieldsTosave["tipo_de_cliente"] = ($scope.datos2.tipoCliente == undefined) ? "Empleado" : $scope.datos2.tipoCliente;
            $scope.fieldsTosave["tipo_de_plan"] = ($scope.datos2.tipoPlan == undefined) ? "Plan Especial" : $scope.datos2.tipoPlan;
            $scope.fieldsTosave["tasa_final_al_cliente"] = $scope.datos3.tasafinalCliente;
            $scope.fieldsTosave["monto_extra_cuota_1"] = $scope.datos3.montoExtracuota1;
            $scope.fieldsTosave["monto_extra_cuota_2"] = $scope.datos3.montoExtracuota2;
            $scope.fieldsTosave["mes_extra_cuota_2"] = $scope.datos2.mesExtracuota2;
            $scope.fieldsTosave["cuota_1"] = $scope.datos3.cuota1;
            $scope.fieldsTosave["seguro_de_vida"] = $scope.datos3.segurovida;
            $scope.fieldsTosave["edad_solicitante"] = $scope.datos1.edad;
            $scope.fieldsTosave["seguro_poliza_colectiva"] = ($scope.datos1.polizaColectiva == 'SI');
            $scope.fieldsTosave["seguro_tranquilidad_global"] = ($scope.datos1.tranquilidadglobal == undefined ) ? "TG" : $scope.datos1.tranquilidadglobal;
            $scope.fieldsTosave["monto"] = $scope.datos2.monto;
            $scope.fieldsTosave["poliza_colectiva"] = $scope.datos3.polizaColectivaField;
            $scope.fieldsTosave["modelo_vehiculo"] = $scope.datos1.modeloVehiculo;
            $scope.fieldsTosave["plazo_meses"] = $scope.datos2.plazoMes;
            $scope.fieldsTosave["mes_extra_cuota_1"] = $scope.datos2.mesExtracuota1;
            $scope.fieldsTosave["tranqulidad_global"] = (moneyInt($scope.datos3.tranquilidadGloblafield) / $scope.datos2.plazoMes).formatMoney();

            $scope.fieldsTosave["total_prestamo"] = $scope.tranquilidad_global_val_mas_monto;
            $scope.fieldsTosave["total_cuota_mensual_+_seguros"] = $scope.totalcuotaMesSeguro;

            mixpanel.track("Cotizacion Usuario",{
              "tipo": $rootScope.title,
              "user": $rootScope.user.data.name,
              "email": $rootScope.user.data.email,
              "cliente": $scope.clientInfo.name+" "+$scope.clientInfo.lastName,
              "cliente email": $scope.clientInfo.mail
            });

            $rootScope.load = true;
            var registro = Registro;
            $scope.registro = registro;
            $scope.registro.save({
              "IDUs": $rootScope.user.data.id,
              "IDCa": 2.2,
              "Keys": JSON.stringify( $scope.fieldsTosave )
            }).then(function(r) {
              $idnewPost = r.data.split("|")[1];
              $scope.idnewPost = $idnewPost;
              $rootScope.load = false;
            }, function(error) {

            });


          }
        }
        $scope.alert.show = false;
      }else{
        $scope.alert.msgAlert = "Todos los campos son requeridos";
        $scope.alert.show = true;
        $rootScope.alert.check = false;
      }
    };


    $scope.finalizar = function () {
      $state.go('Consultor');
    };


    $scope.listaCotizaciones = [];
    $scope.getPostByID = function($id){
      $scope.registro.getPostByID({
        "idPost": $idnewPost,
      }).then(function(r) {
        $scope.listaCotizaciones.unshift(r.data[0]);

        $scope.detailsOpen(0);
        $scope.mailclient();
        $rootScope.okmail();

        $rootScope.load = false;
      }, function(error) {

      });
    }

    $scope.sendmailCotizacion = function(){
      $rootScope.load = true;
      $scope.getPostByID();
    };






    $rootScope.newCotiuser = function () {
      $rootScope.clientInfo = {
        lastName: $scope.clientInfo.lastName,
        mail: $scope.clientInfo.mail,
        cell: $scope.clientInfo.cell,
        name: $scope.clientInfo.name
      }
      angular.element(".a-return").show();
      $state.go("Consultor.tipoPrestamo");
    };
    $scope.registrosUpdate = function(Estado) {
      console.log(Estado);
      console.log($scope.idnewPost);
      $rootScope.load = true;
      $scope.registro.update({
        // "IDUs": 1,
        "IDUs": $rootScope.user.data.id,
        "IDPost": $scope.idnewPost,
        "estado": Estado
      }).then(function(r) {
        $rootScope.load = false;
        $scope.finalizar();
      }, function(error) {
        console.log(error);
      });
    };

















  function remove_character(k){
    if(typeof k == "string" ){
      k = k.replaceAll("_"," ");
      k = k.slice(0, 1).toUpperCase() + k.slice(1);
    }
    return k;
  }
  $scope.getUsersMail = function() {
    $rootScope.load = true;
    $scope.registro.getUsers({
      "IDUs": $scope.datosPrestamoSeleted.post_author,
    }).then(function(r) {
      $scope.sendMail();
    }, function(error) {

    });
  };
  $scope.sendMail = function(){
    $scope.mailObject = {
      asesor: $scope.user,
      cliente: $scope.datosPrestamoSeleted.PersonalArray,
      head: {
        titulo1: "Resultados",
        titulo2: $scope.datosPrestamoSeleted.category
      },
      rows: $scope.datosPrestamoSeleted.fieldsArray
    };
    console.log($scope.mailObject);
    $scope.registro.mail({
      "datosTabla": JSON.stringify( $scope.mailObject ),
    }).then(function(r) {
      console.log(r);
      $rootScope.load = false;
    }, function(error) {
      console.log(error);
      $rootScope.load = false;
    });
  }
  $scope.mailclient = function() {
    $scope.sendMail();
    mixpanel.track("Envio de correo Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
      "cliente": $scope.datosPrestamoSeleted.PersonalArray[0].value+" "+$scope.datosPrestamoSeleted.PersonalArray[1].value,
      "cliente email": $scope.datosPrestamoSeleted.PersonalArray[2].value
    });
  };

  $scope.historialSelect = 0;
  $scope.detailsOpen = function ($index) {
    $scope.details = true;
    $scope.datosPrestamoSeleted = $scope.listaCotizaciones[$index];
    $scope.historialSelect = $index;

    $rootScope.titleResultados = $scope.datosPrestamoSeleted.category;

    $scope.datosPrestamoSeleted.fieldsArray = [];
    $scope.datosPrestamoSeleted.PersonalArray = [];
    $scope.datosPrestamoSeleted.summaryArray = [];

    $scope.datosPrestamoSeleted.summaryArray[0] = {};
    $scope.datosPrestamoSeleted.summaryArray[0].data = [];
    $scope.datosPrestamoSeleted.summaryArray[1] = {};
    $scope.datosPrestamoSeleted.summaryArray[1].data = [];
    $scope.datosPrestamoSeleted.summaryArray[2] = {};
    $scope.datosPrestamoSeleted.summaryArray[2].data = [];

    for(var k in $scope.datosPrestamoSeleted.fields){
      var d = $scope.datosPrestamoSeleted.fields[k];
      if( k.trim() != "_edit_lock" ){
        if( k.trim() == "apellido_del_cliente" ||
            k.trim() == "celular_del_cliente" ||
            k.trim() == "nombre_del_cliente" ||
            k.trim() == "email_del_cliente" ){
          $scope.datosPrestamoSeleted.PersonalArray[$scope.datosPrestamoSeleted.PersonalArray.length] = {
            name: remove_character(k),
            value: d
          }
        }else{
          if( $scope.datosPrestamoSeleted.category == "Préstamo Personal" ){
            if( k.trim() == "cuota" || k.trim() == "cuota_protegida" || k.trim() == "vida" || k.trim() == "cuota_+_vida"  ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "monto" || k.trim() == "edad" || k.trim() == "plazo_meses" || k.trim() == "fecha_desembolso" || k.trim() == "fecha_desembolso" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "DATOS DEL CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "capital" || k.trim() == "intereses" || k.trim() == "seguro_de_vida" || k.trim() == "total_primera_cuota" || k.trim() == "tasa_periodica_m_v" || k.trim() == "equivalencia_tasa_nominal_m_v" || k.trim() == "equivalencia_tasa_efectiva_anual" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguro_cp" || k.trim() == "cuota_protegida" || k.trim() == "prima_seguro_por_millon" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vivienda" ) {
            if( k.trim() == "cuota" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "valor_del_inmueble" || k.trim() == "cuota_inicial" || k.trim() == "valor_leasing_o_credito_hipotecario" || k.trim() == "plazo_en_meses" || k.trim() == "opcion_de_compra" || k.trim() == "opcion_de_compra_t" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tipo_tasa" || k.trim() == "d_t_f_t_a" || k.trim() == "d_t_f__+" || k.trim() == "tasa_e_a" || k.trim() == "tasa_m_v" || k.trim() == "tasa_fija" || k.trim() == "tasa" || k.trim() == "vivienda_protegida" || k.trim() == "vivienda_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguros" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Tradicional" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo 14 Cuotas" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Premium" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" || k.trim() == "total_abono_a_capital" || k.trim() == "promedio_abono_capital_con_t_g" || k.trim() == "mes_6" || k.trim() == "mes_9" || k.trim() == "mes_12" || k.trim() == "mes_18" || k.trim() == "mes_24" || k.trim() == "mes_32" || k.trim() == "mes_36" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }
        }
      }
    }

  };


}]);

app.controller('prestamoVehiculo3Controller', ['$rootScope', '$scope', '$template', 'User', '$state','Registro', function($rootScope, $scope, $template, User, $state, Registro) {

    $rootScope.title = "PREMIUM";
    $rootScope.simulador = true;
    $scope.sub = false;
    $rootScope.pagesActive = true;
    $rootScope.pagesNumber = '1/5';
    $step = 0;
    $scope.$rootScope = $rootScope;

    $scope.p1 = true;
    $scope.p2 = false;
    $scope.p3 = false;
    $scope.p4 = false;
    $scope.p5 = false;

    $scope.datos1 = {};
    $scope.datos2 = {};
    $scope.datos3 = {};
    $scope.datos4 = {};

    $scope.datos2.tasaperiodica = 1;
    $scope.datos2.tasaMV = 0;
    $scope.datos3.tasa = 0;


    $scope.datos1.polizaColectiva = "SI";
    $scope.datos1.tranquilidadGlobal = "SI";

    $scope.datos2.tasaperiodica = 1;
    $scope.datos2.tasaMV = 0;
    $scope.datos3.tasa = 0;

    String.prototype.replaceAll = function(target, replacement) {
      return this.split(target).join(replacement);
    };

    Number.prototype.formatMoney = function(c, d, t){
    var n = this,
        c = isNaN(c = Math.abs(c)) ? 0 : c,
        d = d == undefined ? "," : d,
        t = t == undefined ? "." : t,
        s = n < 0 ? "-" : "",
        i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
        j = (j = i.length) > 3 ? j % 3 : 0;
       return "$" + s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
     };

    function moneyInt($n){
      $n = parseFloat($n.slice(1).replaceAll(".",""));
      return $n;
    }

    $scope.calPercetMonto = function(model,suffix){
      $scope.datos3["montoPercent"+suffix] = ( (parseFloat(model) / 100 ) * moneyInt($scope.datos2.monto) );
      $scope.datos3["montoPercent"+suffix] = $scope.datos3["montoPercent"+suffix].formatMoney();
    }

    $scope.tranqulidad_global = function () {

      $scope.datos3.segurovida = (moneyInt($scope.datos3.TotalAbonoCapital) * 885 / 1000000) * (1 + (parseFloat($scope.datos2.estraPrima) / 100));
      // $scope.datos3.segurovida = (moneyInt($scope.datos2.monto) * 885 / 1000000) * (1 + (parseFloat($scope.datos2.estraPrima) / 100));
      $scope.datos3.segurovida = $scope.datos3.segurovida.formatMoney();

      if( $scope.datos2.tranquilidadglobal == "TG" || $scope.datos2.tranquilidadglobal == undefined ){
       $scope.datos3.tranquilidadGloblafield = (( moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida) + moneyInt($scope.datos3.polizaColectivaField) ) * $scope.datos2.plazoMes ) * 0.0769;
      }else if( $scope.datos2.tranquilidadglobal == "CPT"){
        $scope.datos3.tranquilidadGloblafield = Math.ceil( $scope.datos2.plazoMes * 495000 / 1000 ) * 100;
      }else if( $scope.datos2.tranquilidadglobal == "CPM"){
      //  $scope.datos3.tranquilidadGloblafield = Math.ceil($scope.datos2.plazoMes * (moneyInt($scope.datos3.polizaColectivaField) + moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida)) ) * ( (885/1000) * ((6.03/100) / 1000) ) * (1.03 / 100) * 100000;
       $scope.datos3.tranquilidadGloblafield = $scope.datos2.plazoMes * (moneyInt($scope.datos3.polizaColectivaField) + moneyInt($scope.datos3.cuota1) + moneyInt($scope.datos3.segurovida)) * ((6.188/100) / 1000) * 1000;
      }
      // var n = $scope.datos3.tranquilidadGloblafield.toFixed();
      // n = n.toString();
      // if( n.slice(-4) >= 5000 ){
      //   if( parseInt(n.slice(-5,-4)) == 9 ){
      //     n = n.slice(0,n.length-5) + (parseInt(n.slice(-5,-4)) + 1) + '000';
      //   }else{
      //     n = n.slice(0,n.length-5) + (parseInt(n.slice(-5,-4)) + 1) + '0000';
      //   }
      // }else{
      // 	n = n.slice(0,n.length-4) + '0000';
      // }
      // $scope.datos3.tranquilidadGloblafield = parseInt(n);
      $scope.datos3.desembolso = (  moneyInt($scope.datos3.TotalAbonoCapital) + $scope.datos3.tranquilidadGloblafield ) * parseFloat($scope.datos3.tasafinalCliente);
      $scope.datos3.cuotaMentsual = ( moneyInt($scope.datos3.TotalAbonoCapital) + $scope.datos3.tranquilidadGloblafield ) * (parseFloat($scope.datos3.tasafinalCliente) / 100 );
      $scope.datos3.promedioabonoCapital = ( moneyInt($scope.datos3.TotalAbonoCapital) + $scope.datos3.tranquilidadGloblafield ) / 7;

      $scope.datos3.tranquilidadGloblafield = $scope.datos3.tranquilidadGloblafield.formatMoney();
      $scope.datos3.desembolso = $scope.datos3.desembolso.formatMoney();
      $scope.datos3.promedioabonoCapital = $scope.datos3.promedioabonoCapital.formatMoney();
      $scope.datos3.cuotaMentsual = $scope.datos3.cuotaMentsual.formatMoney();
    }

    $scope.tasafinal = function () {
      if( $scope.datos2.tipoCliente == "CB" && $scope.datos2.tipoPlan == "CO"){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.04;
      }else if( $scope.datos2.tipoCliente == "CB" && $scope.datos2.tipoPlan == "CD" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.06;
      }else if( $scope.datos2.tipoCliente == "CN" && $scope.datos2.tipoPlan == "CO" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.02;
      }else if( $scope.datos2.tipoCliente == "CN" && $scope.datos2.tipoPlan == "CD" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario) - 0.05;
      }else if( $scope.datos2.tipoCliente == undefined && $scope.datos2.tipoPlan == undefined ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario);
      }else if( $scope.datos2.tipoCliente == "E" && $scope.datos2.tipoPlan == "P" ){
        $scope.datos3.tasafinalCliente = parseFloat($scope.datos2.listaConcesionario);
      }
      $scope.datos3.tasafinalCliente = ( typeof $scope.datos3.tasafinalCliente == 'string') ? $scope.datos3.tasafinalCliente : $scope.datos3.tasafinalCliente.toFixed(2);
      $scope.datos3.tasafinalCliente = $scope.datos3.tasafinalCliente.toString().slice(0, 4) + "%";
    };

    $scope.prevNew = function(){
      console.log($step);
      if ( $step > 0){
        $step--;
        $scope.p1 = false;
        $scope.p2 = false;
        $scope.p3 = false;
        $scope.p4 = false;
        $scope.p5 = false;
        if( $step == 0 ){
          $scope.p1 = true;
          $rootScope.pagesNumber = '1/5';
        }else if( $step == 1 ){
          $scope.p2 = true;
          $rootScope.pagesNumber = '2/5';
        }else if( $step == 2 ){
          $scope.p3 = true;
          $rootScope.pagesNumber = '3/5';
        }else if( $step == 3 ){
          $scope.p4 = true;
          $rootScope.pagesNumber = '4/5';
        }else if( $step == 4 ){
          $scope.p5 = true;
          $rootScope.pagesNumber = '5/5';
        }
      }else{
        $rootScope.prev = $scope.saveprev;
        $state.go('Consultor.tipoPrestamo');
      }
    };

    $scope.saveprev = $rootScope.prev;
    $rootScope.prev = $scope.prevNew;

    $scope.next = function(form){
      if( form.$valid ){
      if ( $step < 5){
        $step++;
        $scope.p1 = false;
        $scope.p2 = false;
        $scope.p3 = false;
        $scope.p4 = false;
        $scope.p5 = false;
        if( $step == 1 ){
          $scope.p2 = true;
          $rootScope.pagesNumber = '2/5';
        }else if( $step == 2 ){
          $scope.p3 = true;
          $rootScope.pagesNumber = '3/5';
          $scope.tasafinal();
        }else if( $step == 3 ){
          $scope.p4 = true;
          $rootScope.pagesNumber = '4/5';

          $scope.datos3.TotalAbonoCapital = moneyInt($scope.datos3.montoPercentMes6) + moneyInt($scope.datos3.montoPercentMes9) + moneyInt($scope.datos3.montoPercentMes12) + moneyInt($scope.datos3.montoPercentMes18) + moneyInt($scope.datos3.montoPercentMes24) + moneyInt($scope.datos3.montoPercentMes32) + moneyInt($scope.datos3.montoPercentMes36);

          var porcentaje = parseFloat($scope.datos3.tasafinalCliente);

          var a = ( moneyInt($scope.datos2.monto) * (porcentaje / 100));
          var b = 1 - Math.pow( ((porcentaje / 100)+1), (-$scope.datos2.plazoMes)  );

          $scope.datos3.cuota1 = $scope.datos3.TotalAbonoCapital * ( parseFloat($scope.datos3.tasafinalCliente) / 100 );
          // $scope.datos3.cuota1 = moneyInt($scope.datos2.monto) * ( parseFloat($scope.datos3.tasafinalCliente) / 100 );

          if( $scope.datos1.polizaColectiva == 'NO' ){

            $scope.datos3.polizaColectivaField = 0;
            $scope.datos3.polizaColectivaField = $scope.datos3.polizaColectivaField.formatMoney();

            $scope.datos3.segurovida = (moneyInt($scope.datos2.monto) * 885 / 1000000) * (1 + (parseFloat($scope.datos2.estraPrima) / 100));
            $scope.datos3.segurovida = $scope.datos3.segurovida.formatMoney();

            $scope.datos3.tranquilidadGloblafield = 0;
            $scope.datos3.desembolso = (  ($scope.datos3.TotalAbonoCapital) + $scope.datos3.tranquilidadGloblafield ) * parseFloat($scope.datos3.tasafinalCliente);
            $scope.datos3.cuotaMentsual = ( ($scope.datos3.TotalAbonoCapital) + $scope.datos3.tranquilidadGloblafield ) * (parseFloat($scope.datos3.tasafinalCliente) / 100 );
            $scope.datos3.promedioabonoCapital = ( ($scope.datos3.TotalAbonoCapital) + $scope.datos3.tranquilidadGloblafield ) / 7;

            $scope.datos3.tranquilidadGloblafield = $scope.datos3.tranquilidadGloblafield.formatMoney();
            $scope.datos3.desembolso = $scope.datos3.desembolso.formatMoney();
            $scope.datos3.promedioabonoCapital = $scope.datos3.promedioabonoCapital.formatMoney();
            $scope.datos3.cuotaMentsual = $scope.datos3.cuotaMentsual.formatMoney();
          }

          $scope.datos3.cuota1 = $scope.datos3.cuota1.formatMoney();
          $scope.datos3.TotalAbonoCapital = $scope.datos3.TotalAbonoCapital.formatMoney();

          if( $scope.datos3.polizaColectivaField != undefined ){
            $scope.tranqulidad_global();
          }

        }else if( $step == 4 ){
          // angular.element(".a-return").hide();
          $scope.p5 = true;
          $rootScope.pagesNumber = '5/5';

          // $scope.totalcuotaMesSeguro = ( moneyInt($scope.datos3.TotalAbonoCapital) + moneyInt($scope.datos3.tranquilidadGloblafield) );
          if( $scope.datos1.polizaColectiva == 'SI' ){
            $scope.totalcuotaMesSeguro = ( moneyInt($scope.datos3.TotalAbonoCapital) + moneyInt($scope.datos3.tranquilidadGloblafield) );
          }else{
            $scope.totalcuotaMesSeguro = ( moneyInt($scope.datos3.TotalAbonoCapital) + 0 );
          }
          $scope.datos3.cuotaMentsual = $scope.totalcuotaMesSeguro * ( parseFloat($scope.datos3.tasafinalCliente) / 100 );
          $scope.datos3.cuotaMentsual = $scope.datos3.cuotaMentsual.formatMoney();

          $scope.tranquilidad_global_val_mas_monto = moneyInt($scope.datos3.segurovida) + moneyInt($scope.datos3.cuotaMentsual) + moneyInt($scope.datos3.polizaColectivaField);
          $scope.tranquilidad_global_val_mas_monto = $scope.tranquilidad_global_val_mas_monto.formatMoney();
          $scope.totalcuotaMesSeguro = $scope.totalcuotaMesSeguro.formatMoney();


          $scope.summary = [
            {
              title: "MODELO Y SEGURO",
              fields: [
                {
                  name: "Modelo Vehículo",
                  val: $scope.datos1.modeloVehiculo,
                  active: true
                },{
                  name: "Edad Solicitante",
                  val: $scope.datos1.edad,
                  active: true
                },{
                  name: "Póliza Colectiva",
                  val: $scope.datos1.polizaColectiva,
                  active: true
                },{
                  name: "Tranquilidad Global",
                  val: ($scope.datos2.tranquilidadglobal == undefined)?'TG':$scope.datos2.tranquilidadglobal,
                  active: ( $scope.datos1.polizaColectiva == 'SI' )
                }
              ]
            },{
              title: "MONTO Y PLAZO",
              fields: [
                {
                  name: "Monto",
                  val: $scope.datos2.monto,
                  active: true
                },{
                  name: "Plazo / meses",
                  val: $scope.datos2.plazoMes,
                  active: true
                },{
                  name: "Lista concesionario",
                  val: $scope.datos2.listaConcesionario,
                  active: true
                },{
                  name: "Tipo de Cliente",
                  val: ($scope.datos2.tipoCliente == undefined) ? "Empleado" : $scope.datos2.tipoCliente,
                  active: true
                },{
                  name: "Tipo de Plan",
                  val: ($scope.datos2.tipoPlan == undefined) ? "Plan Especial" : $scope.datos2.tipoPlan,
                  active: true
                },{
                  name: "Extra Prima",
                  val: $scope.datos2.estraPrima,
                  active: true
                },{
                  name: "Tasa final al cliente",
                  val: $scope.datos3.tasafinalCliente,
                  active: true
                },{
                  name: "Monto Extra cuota 1",
                  val: $scope.datos3.tasafinalCliente,
                  active: true
                },{
                  name: "Mes Extra cuota 1",
                  val: $scope.datos3.tasafinalCliente,
                  active: true
                },{
                  name: "Monto Extra cuota 2",
                  val: $scope.datos3.tasafinalCliente,
                  active: true
                },{
                  name: "Mes Extra cuota 2",
                  val: $scope.datos3.tasafinalCliente,
                  active: true
                }
              ]
            },{
              title: "CUOTA MENSUAL",
              fields: [
                {
                  name: "Cuota 1",
                  val: $scope.datos3.cuota1,
                  active: true
                },{
                  name: "Vida",
                  val: $scope.datos3.segurovida,
                  active: true
                },{
                  name: "Póliza Colectiva",
                  val: $scope.datos3.polizaColectivaField,
                  active: true
                },{
                  name: "Tranqulidad Global",
                  val: $scope.datos3.tranquilidadGloblafield,
                  active: ( $scope.datos1.polizaColectiva == 'SI' )
                }
              ]
            },
          ];

          $scope.datosPrestamo = [];
          $scope.datosPrestamo = [
            {
              name: "Resultado",
              val: "",
              Subname: "Préstamo Vehículo",
              active: true
            },{
              name: ($scope.datos2.tranquilidadglobal == undefined)?'Valor Prima TG': "Valor Prima "+$scope.datos2.tranquilidadglobal,
              val: $scope.datos3.tranquilidadGloblafield,
              active: ( $scope.datos1.polizaColectiva == 'SI' ),
              class: "bottom-color"
            },{
              name: ($scope.datos2.tranquilidadglobal == undefined)?'Préstamo (Créd + TG)': "Préstamo (Créd + "+$scope.datos2.tranquilidadglobal+")",
              val: $scope.totalcuotaMesSeguro,
              active: true
            },{
              name: "Cuota mensual",
              val: $scope.datos3.cuotaMentsual,
              active: true
            },{
              name: "Seguro de Vida",
              val: $scope.datos3.segurovida,
              active: true
            },{
              name: "Póliza Colectiva",
              val: $scope.datos3.polizaColectivaField,
              active: true
            },{
              name: "Total Cuota + seguros",
              val: $scope.tranquilidad_global_val_mas_monto,
              active: true
            }
          ];

          $scope.fieldsTosave = {};
          $scope.fieldsTosave["apellido_del_cliente"] = $scope.clientInfo.lastName;
          $scope.fieldsTosave["email_del_cliente"] = $scope.clientInfo.mail;
          $scope.fieldsTosave["celular_del_cliente"] = $scope.clientInfo.cell;
          $scope.fieldsTosave["nombre_del_cliente"] = $scope.clientInfo.name;

          $scope.fieldsTosave["modelo_vehiculo"] = $scope.datos1.modeloVehiculo;
          $scope.fieldsTosave["edad_solicitante"] = $scope.datos1.edad;
          $scope.fieldsTosave["seguro_poliza_colectiva"] = ($scope.datos1.polizaColectiva == 'SI');
          $scope.fieldsTosave["seguro_tranquilidad_global"] = ($scope.datos2.tranquilidadglobal == undefined)?'TG':$scope.datos2.tranquilidadglobal;
          $scope.fieldsTosave["monto"] = $scope.datos2.monto;
          $scope.fieldsTosave["plazo_meses"] = $scope.datos2.plazoMes;
          $scope.fieldsTosave["tasa_lista_concesionario"] = $scope.datos2.listaConcesionario;
          $scope.fieldsTosave["extraprima"] = $scope.datos2.estraPrima;
          $scope.fieldsTosave["tipo_de_cliente"] = ($scope.datos2.tipoCliente == undefined) ? "Empleado" : $scope.datos2.tipoCliente;
          $scope.fieldsTosave["tipo_de_plan"] = ($scope.datos2.tipoPlan == undefined) ? "Plan Especial" : $scope.datos2.tipoPlan;
          $scope.fieldsTosave["tasa_final_al_cliente"] = $scope.datos3.tasafinalCliente;
          $scope.fieldsTosave["cuota_inicial"] = $scope.datos3.cuotaMentsual;
          $scope.fieldsTosave["mes_6"] = $scope.datos3.montoPercentMes6;
          $scope.fieldsTosave["mes_9"] = $scope.datos3.montoPercentMes6;
          $scope.fieldsTosave["mes_12"] = $scope.datos3.montoPercentMes12;
          $scope.fieldsTosave["mes_18"] = $scope.datos3.montoPercentMes18;
          $scope.fieldsTosave["mes_24"] = $scope.datos3.montoPercentMes24;
          $scope.fieldsTosave["mes_32"] = $scope.datos3.montoPercentMes32;
          $scope.fieldsTosave["mes_36"] = $scope.datos3.montoPercentMes36;
          $scope.fieldsTosave["total_abono_a_capital"] = $scope.datos3.TotalAbonoCapital;
          $scope.fieldsTosave["cuota_mensual_(i_+_k_+_tg)"] = $scope.datos3.cuotaMentsual;
          $scope.fieldsTosave["seguro_de_vida"] = $scope.datos3.segurovida;
          $scope.fieldsTosave["poliza_colectiva"] = $scope.datos3.polizaColectivaField;
          $scope.fieldsTosave["tranqulidad_global"] = $scope.datos3.tranquilidadGloblafield;
          $scope.fieldsTosave["promedio_abono_capital_con_t_g"] = $scope.datos3.promedioabonoCapital;

          $scope.fieldsTosave["total_prestamo"] = $scope.totalcuotaMesSeguro;
          $scope.fieldsTosave["total_cuota_mensual_+_seguros"] = $scope.tranquilidad_global_val_mas_monto;

          mixpanel.track("Cotizacion Usuario",{
            "tipo": $rootScope.title,
            "user": $rootScope.user.data.name,
            "email": $rootScope.user.data.email,
            "cliente": $scope.clientInfo.name+" "+$scope.clientInfo.lastName,
            "cliente email": $scope.clientInfo.mail
          });


          $rootScope.load = true;
          var registro = Registro;
          $scope.registro = registro;
          $scope.registro.save({
            "IDUs": $rootScope.user.data.id,
            "IDCa": 2.3,
            "Keys": JSON.stringify( $scope.fieldsTosave )
          }).then(function(r) {
              $idnewPost = r.data.split("|")[1];
              $scope.idnewPost = $idnewPost;
              $rootScope.load = false;
          }, function(error) {

          });


        }
      }
      $scope.alert.show = false;
      }else{
        $scope.alert.msgAlert = "Todos los campos son requeridos";
        $scope.alert.show = true;
        $rootScope.alert.check = false;
      }
    };


    $scope.finalizar = function () {
      $state.go('Consultor');
    };



    $scope.listaCotizaciones = [];
    $scope.getPostByID = function($id){
      $scope.registro.getPostByID({
        "idPost": $idnewPost,
      }).then(function(r) {
        $scope.listaCotizaciones.unshift(r.data[0]);

        $scope.detailsOpen(0);
        $scope.mailclient();
        $rootScope.okmail();

        $rootScope.load = false;
      }, function(error) {

      });
    }

    $scope.sendmailCotizacion = function(){
      $rootScope.load = true;
      $scope.getPostByID();
    };




    $rootScope.newCotiuser = function () {
      $rootScope.clientInfo = {
        lastName: $scope.clientInfo.lastName,
        mail: $scope.clientInfo.mail,
        cell: $scope.clientInfo.cell,
        name: $scope.clientInfo.name
      }
      angular.element(".a-return").show();
      $state.go("Consultor.tipoPrestamo");
    };
    $scope.registrosUpdate = function(Estado) {
      console.log(Estado);
      console.log($scope.idnewPost);
      $rootScope.load = true;
      $scope.registro.update({
        // "IDUs": 1,
        "IDUs": $rootScope.user.data.id,
        "IDPost": $scope.idnewPost,
        "estado": Estado
      }).then(function(r) {
        $rootScope.load = false;
        $scope.finalizar();
      }, function(error) {
        console.log(error);
      });
    };


















  function remove_character(k){
    if(typeof k == "string" ){
      k = k.replaceAll("_"," ");
      k = k.slice(0, 1).toUpperCase() + k.slice(1);
    }
    return k;
  }
  $scope.getUsersMail = function() {
    $rootScope.load = true;
    $scope.registro.getUsers({
      "IDUs": $scope.datosPrestamoSeleted.post_author,
    }).then(function(r) {
      $scope.sendMail();
    }, function(error) {

    });
  };
  $scope.sendMail = function(){
    $scope.mailObject = {
      asesor: $scope.user,
      cliente: $scope.datosPrestamoSeleted.PersonalArray,
      head: {
        titulo1: "Resultados",
        titulo2: $scope.datosPrestamoSeleted.category
      },
      rows: $scope.datosPrestamoSeleted.fieldsArray
    };
    console.log($scope.mailObject);
    $scope.registro.mail({
      "datosTabla": JSON.stringify( $scope.mailObject ),
    }).then(function(r) {
      console.log(r);
      $rootScope.load = false;
    }, function(error) {
      console.log(error);
      $rootScope.load = false;
    });
  }
  $scope.mailclient = function() {
    $scope.sendMail();
    mixpanel.track("Envio de correo Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
      "cliente": $scope.datosPrestamoSeleted.PersonalArray[0].value+" "+$scope.datosPrestamoSeleted.PersonalArray[1].value,
      "cliente email": $scope.datosPrestamoSeleted.PersonalArray[2].value
    });
  };

  $scope.historialSelect = 0;
  $scope.detailsOpen = function ($index) {
    $scope.details = true;
    $scope.datosPrestamoSeleted = $scope.listaCotizaciones[$index];
    $scope.historialSelect = $index;

    $rootScope.titleResultados = $scope.datosPrestamoSeleted.category;

    $scope.datosPrestamoSeleted.fieldsArray = [];
    $scope.datosPrestamoSeleted.PersonalArray = [];
    $scope.datosPrestamoSeleted.summaryArray = [];

    $scope.datosPrestamoSeleted.summaryArray[0] = {};
    $scope.datosPrestamoSeleted.summaryArray[0].data = [];
    $scope.datosPrestamoSeleted.summaryArray[1] = {};
    $scope.datosPrestamoSeleted.summaryArray[1].data = [];
    $scope.datosPrestamoSeleted.summaryArray[2] = {};
    $scope.datosPrestamoSeleted.summaryArray[2].data = [];

    for(var k in $scope.datosPrestamoSeleted.fields){
      var d = $scope.datosPrestamoSeleted.fields[k];
      if( k.trim() != "_edit_lock" ){
        if( k.trim() == "apellido_del_cliente" ||
            k.trim() == "celular_del_cliente" ||
            k.trim() == "nombre_del_cliente" ||
            k.trim() == "email_del_cliente" ){
          $scope.datosPrestamoSeleted.PersonalArray[$scope.datosPrestamoSeleted.PersonalArray.length] = {
            name: remove_character(k),
            value: d
          }
        }else{
          if( $scope.datosPrestamoSeleted.category == "Préstamo Personal" ){
            if( k.trim() == "cuota" || k.trim() == "cuota_protegida" || k.trim() == "vida" || k.trim() == "cuota_+_vida"  ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "monto" || k.trim() == "edad" || k.trim() == "plazo_meses" || k.trim() == "fecha_desembolso" || k.trim() == "fecha_desembolso" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "DATOS DEL CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "capital" || k.trim() == "intereses" || k.trim() == "seguro_de_vida" || k.trim() == "total_primera_cuota" || k.trim() == "tasa_periodica_m_v" || k.trim() == "equivalencia_tasa_nominal_m_v" || k.trim() == "equivalencia_tasa_efectiva_anual" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguro_cp" || k.trim() == "cuota_protegida" || k.trim() == "prima_seguro_por_millon" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vivienda" ) {
            if( k.trim() == "cuota" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "valor_del_inmueble" || k.trim() == "cuota_inicial" || k.trim() == "valor_leasing_o_credito_hipotecario" || k.trim() == "plazo_en_meses" || k.trim() == "opcion_de_compra" || k.trim() == "opcion_de_compra_t" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tipo_tasa" || k.trim() == "d_t_f_t_a" || k.trim() == "d_t_f__+" || k.trim() == "tasa_e_a" || k.trim() == "tasa_m_v" || k.trim() == "tasa_fija" || k.trim() == "tasa" || k.trim() == "vivienda_protegida" || k.trim() == "vivienda_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguros" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Tradicional" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: ( k.trim() == "tranqulidad_global" ) ? 'Valor Prima T.G' : remove_character(k),
                value: d,
                class: ( k.trim() == "tranqulidad_global" ) ? 'bottom-color' : ''
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo 14 Cuotas" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: ( k.trim() == "tranquilidad_global_val" ) ? 'Valor Prima T.G' : ( k.trim() == "total_cuota_mensual_+_seguros" ) ? 'Total Cuota + Seguros' : ( k.trim() == "poliza_colectiva" ) ? 'Póliza Colectiva' : ( k.trim() == "cuota_1" ) ? 'Cuota mensual' : remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Premium" ) {
            if( k.trim() == "seguro_tranquilidad_global" ){
              tranquilidad_global = d;
            }
            if( k.trim() == "total_prestamo" || k.trim() == "tranqulidad_global" || k.trim() == "cuota_inicial" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: ( k.trim() == "tranqulidad_global" ) ? 'Valor Prima '+tranquilidad_global : ( k.trim() == "total_cuota_mensual_+_seguros" ) ? 'Total Cuota + Seguros' : ( k.trim() == "poliza_colectiva" ) ? 'Póliza Colectiva' : ( k.trim() == "cuota_inicial" ) ? 'Cuota mensual' : ( k.trim() == "total_prestamo" ) ? 'Préstamo (Créd + '+tranquilidad_global+')' : remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" || k.trim() == "total_abono_a_capital" || k.trim() == "promedio_abono_capital_con_t_g" || k.trim() == "mes_6" || k.trim() == "mes_9" || k.trim() == "mes_12" || k.trim() == "mes_18" || k.trim() == "mes_24" || k.trim() == "mes_32" || k.trim() == "mes_36" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }
        }
      }
    }


    var otherArray = [];
    console.log($scope.datosPrestamoSeleted.fieldsArray);
    for(var i = 0; i < $scope.datosPrestamoSeleted.fieldsArray.length; i++){
      var d = $scope.datosPrestamoSeleted.fieldsArray[i];
      if( d.name.search("Total") != -1 ){
        otherArray.splice($scope.datosPrestamoSeleted.fieldsArray.length, 0, d);
      }else if( d.name.search("Valor Prima") != -1 ){
        otherArray.splice(0, 0, d);
      }else if( d.name.search("Préstamo ") != -1 ){
        otherArray.splice(1, 0, d);
      }else if( d.name.search("Seguro de") != -1 ){
        otherArray.splice(2, 0, d);
      }else{
        otherArray[i] = d;
      }
    }
    $scope.datosPrestamoSeleted.fieldsArray = otherArray;

  };


}]);

app.controller('prestamoViviendaController', ['$rootScope', '$scope', '$template', 'User', '$state', 'Registro' ,function($rootScope, $scope, $template, User, $state, Registro) {

    $rootScope.title = "PRÉSTAMO VIVIENDA";
    $rootScope.simulador = true;
    $scope.sub = false;
    $rootScope.pagesActive = true;
    $rootScope.pagesNumber = '1/5';
    $step = 0;
    $scope.$rootScope = $rootScope;

    $scope.p1 = true;
    $scope.p2 = false;
    $scope.p3 = false;
    $scope.p4 = false;
    $scope.p5 = false;

    $scope.datos1 = {};
    $scope.datos2 = {};
    $scope.datos3 = {};
    $scope.datos4 = {};

    $scope.datos2.tasaperiodica = 'Variable';
    $scope.datos2.tasaMV = 0;
    $scope.datos3.tasa = 0;
    $scope.datos2.dtfta = "0%";

    Tipotasa = "";

    $scope.datos3.viendaprotegida = '$0';
    $scope.datos3.cuotapreotegida = '$0';

    String.prototype.replaceAll = function(target, replacement) {
      return this.split(target).join(replacement);
    };

    Number.prototype.formatMoney = function(c, d, t){
    var n = this,
        c = isNaN(c = Math.abs(c)) ? 0 : c,
        d = d == undefined ? "," : d,
        t = t == undefined ? "." : t,
        s = n < 0 ? "-" : "",
        i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
        j = (j = i.length) > 3 ? j % 3 : 0;
       return "$" + s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
     };

    function moneyInt($n){
      $n = parseFloat($n.slice(1).replaceAll(".",""));
      return $n;
    }

    $scope.tasaMVfun = function () {
      $scope.datos2.tasaMV = ( (Math.pow( 1+( parseFloat($scope.datos2.tasaEA)/100), (0.083333333 ) ) - 1) * 100);
      $scope.datos2.tasaMV = $scope.datos2.tasaMV.toString();
      if( parseInt($scope.datos2.tasaMV.slice(4, 5)) > 4 ){
        $scope.datos2.tasaMV = $scope.datos2.tasaMV.slice(0, 3) + ( parseInt($scope.datos2.tasaMV.slice(3, 4)) + 1 )
      }
      $scope.datos2.tasaMV = $scope.datos2.tasaMV.slice(0, 4) + "%";
    };

    $scope.tasa = function () {
      $scope.datos3.tasa = ( (Math.pow( 1+( parseFloat($scope.datos3.tasafija)/100), (0.083333333 ) ) - 1) * 100);
      $scope.datos3.tasa = $scope.datos3.tasa.toString();
      if( parseInt($scope.datos3.tasa.slice(4, 5)) > 4 ){
        $scope.datos3.tasa = $scope.datos3.tasa.slice(0, 3) + ( parseInt($scope.datos3.tasa.slice(3, 4)) + 1 )
      }
      $scope.datos3.tasa = $scope.datos3.tasa.slice(0, 4) + "%";
    };

    $scope.opcionComprafunc = function () {
      $scope.datos1.opcionCompreField = ( moneyInt($scope.datos1.Leasing) * parseFloat($scope.datos1.opciondecomprapor) ) / 100;
      $scope.datos1.opcionCompreField = $scope.datos1.opcionCompreField.formatMoney();
    }

    //$scope.datos1.opciondecompra = ($scope.datos1.Leasing * $scope.datos1.opciondecomprapor)/100;

    $scope.prevNew = function(){
      if ( $step > 0){
        $step--;
        $scope.p1 = false;
        $scope.p2 = false;
        $scope.p3 = false;
        $scope.p4 = false;
        $scope.p5 = false;
        if( $step == 0 ){
          $scope.p1 = true;
          $rootScope.pagesNumber = '1/5';
        }else if( $step == 1 ){
          $scope.p2 = true;
          $rootScope.pagesNumber = '2/5';
        }else if( $step == 2 ){
          $scope.p3 = true;
          $rootScope.pagesNumber = '3/5';
        }else if( $step == 3 ){
          $scope.p4 = true;
          $rootScope.pagesNumber = '4/5';
        }
      }else{
        $rootScope.prev = $scope.saveprev;
        $state.go('Consultor.tipoPrestamo');
      }
    };

    $scope.saveprev = $rootScope.prev;
    $rootScope.prev = $scope.prevNew;

    function PMT(rate, nper, pv, fv, type){
        if (!fv) fv = 0;
        if (!type) type = 0;
        rate = rate / 100;
        if (rate == 0) return -(pv + fv)/nper;
        var pvif = Math.pow(1 + rate, nper);
        pvif = pvif.toFixed(2);
        var pmt = rate / (pvif - 1) * -(pv * pvif + fv);
        if (type == 1) {
          pmt /= (1 + rate);
        };
        return pmt - (pmt * 0.0008);
    }

    $scope.next = function(form){
      if( form.$valid ){
        if ( $step < 4){
          $step++;
          $scope.p1 = false;
          $scope.p2 = false;
          $scope.p3 = false;
          $scope.p4 = false;
          $scope.p5 = false;
          if( $step == 1 ){
            $scope.p2 = true;
            $rootScope.pagesNumber = '2/5';

            if( $scope.datos2.tasaEA != undefined ){
              $scope.tasaMVfun();
            }
          }else if( $step == 2 ){
            $scope.p3 = true;
            $rootScope.pagesNumber = '3/5';
          }else if( $step == 3 ){
            $scope.p4 = true;
            $rootScope.pagesNumber = '4/5';

            var porcentaje = ( $scope.datos2.tasaperiodica == 'Variable') ? parseFloat($scope.datos2.tasaMV) : parseFloat($scope.datos3.tasa);
            Tipotasa = ( $scope.datos2.tasaperiodica == 'Variable') ? "Variable" : "Fija";

            var a = ( moneyInt($scope.datos1.Leasing) * (porcentaje / 100));
            var b = 1 -  Math.pow( ((porcentaje / 100)+1), (-$scope.datos1.plazomeses)  );

            $scope.datos4.cuotaSnseguro = PMT( porcentaje , $scope.datos1.plazomeses , -moneyInt($scope.datos1.Leasing) , moneyInt($scope.datos1.opcionCompreField) ,0);

            $scope.datos4.vidadeudor = (( moneyInt($scope.datos1.Leasing) * 6.33) / 12 ) / 1000;
            $scope.datos4.incendio = (( moneyInt($scope.datos1.monto) * 1.35) / 12 ) /1000 * 1.16;

            $scope.datos4.cuotaSnseguro = $scope.datos4.cuotaSnseguro.formatMoney();
            $scope.datos4.vidadeudor = $scope.datos4.vidadeudor.formatMoney();
            $scope.datos4.incendio = $scope.datos4.incendio.formatMoney();

          }else if( $step == 4 ){
            $scope.p5 = true;
            $rootScope.pagesNumber = '5/5';

            $scope.summary = [
              {
                title: "MONTO Y PLAZO",
                fields: [
                  {
                    name: "Valor del Inmueble",
                    val: $scope.datos1.monto,
                    active: true
                  },{
                    name: "Cuota Inicial",
                    val: $scope.datos1.cuotaInicial,
                    active: true
                  },{
                    name: "Leasing o crédito hipotecario",
                    val: $scope.datos1.Leasing,
                    active: true
                  },{
                    name: "Plazo en meses",
                    val: $scope.datos1.plazomeses,
                    active: true
                  },{
                    name: "Opción de compra %",
                    val: $scope.datos1.opciondecomprapor,
                    active: true
                  },{
                    name: "Opción de compra",
                    val: $scope.datos1.opcionCompreField,
                    active: true
                  }
                ]
              },{
                title: "TASA DE CRÉDITO",
                fields: [
                  {
                    name: "Tipo Tasa",
                    val: $scope.datos2.tasaperiodica,
                    active: true
                  },{
                    name: "D.T.F. (T.A.)",
                    val: $scope.datos2.dtfta,
                    active: true
                  },{
                    name: "D.T.F. +",
                    val: $scope.datos2.DTF,
                    active: true
                  },{
                    name: "Tasa E.A.",
                    val: $scope.datos2.tasaEA,
                    active: true
                  },{
                    name: "Tasa M.V.",
                    val: $scope.datos2.tasaMV,
                    active: true
                  }
                ]
              },{
                title: "TASA DE CRÉDITO",
                fields: [
                  {
                    name: "Tasa fija",
                    val: $scope.datos3.tasafija,
                    active: ( $scope.datos2.tasaperiodica == 'Fija' )
                  },{
                    name: "Tasa",
                    val: $scope.datos3.tasa,
                    active: ( $scope.datos2.tasaperiodica == 'Fija' )
                  },{
                    name: "Vivienda Protegida",
                    val: $scope.datos3.viendaprotegida,
                    active: true
                  },{
                    name: "Cuota Protegida",
                    val: $scope.datos3.cuotapreotegida,
                    active: true
                  }
                ]
              },{
                title: "CUOTA MENSUAL",
                fields: [
                  {
                    name: "Cuota Protegida",
                    val: $scope.datos4.cuotaSnseguro,
                    active: true
                  },{
                    name: "Vida Deudor",
                    val: $scope.datos4.vidadeudor,
                    active: true
                  },{
                    name: "Vivienda Protegida Incendio",
                    val: $scope.datos4.incendio,
                    active: true
                  },{
                    name: "Vivienda Protegida",
                    val: $scope.datos3.viendaprotegida,
                    active: true
                  },{
                    name: "Cuota Protegida",
                    val: $scope.datos3.cuotapreotegida  ,
                    active: true
                  }
                ]
              },
            ];

            $scope.totalcuotaMesSeguro = moneyInt($scope.datos3.cuotapreotegida) + moneyInt($scope.datos4.cuotaSnseguro) + moneyInt($scope.datos3.viendaprotegida) + moneyInt($scope.datos4.incendio) + moneyInt($scope.datos4.vidadeudor);
            $scope.totalcuotaMesSeguro = $scope.totalcuotaMesSeguro.formatMoney();
            $scope.datosPrestamo = [];
            $scope.datosPrestamo = [
              {
                name: "Resultado",
                val: "",
                Subname: "Leasing habitacional / crédito hipotecario",
                active: true
              },
              {
                // name: "Vivienda Protegida Contenidos",
                name: "Cuota Sin Seguros",
                val: $scope.datos4.cuotaSnseguro,
                active: true
              },
              {
                name: "Cuota Protegida",
                val: $scope.datos3.cuotapreotegida,
                active: true
              },
              {
                name: "Vida Deudor",
                val: $scope.datos4.vidadeudor,
                active: true
              },
              {
                name: "Vivienda Protegida Contenidos",
                val: $scope.datos3.viendaprotegida,
                active: true
              },
              {
                name: "Vivienda Protegida Incendio",
                val: $scope.datos4.incendio,
                active: true
              },
              // {
              //   name: "Vivienda Protegida",
              //   val: $scope.datos3.viendaprotegida,
              //   active: true
              // },
              {
                name: "Total Cuota Mensual + seguros",
                val: $scope.totalcuotaMesSeguro,
                active: true
              }
            ];

            $scope.fieldsTosave = {};
            $scope.fieldsTosave["apellido_del_cliente"] = $scope.$rootScope.clientInfo.lastName;
            $scope.fieldsTosave["email_del_cliente"] = $scope.$rootScope.clientInfo.mail;
            $scope.fieldsTosave["celular_del_cliente"] = $scope.$rootScope.clientInfo.cell;
            $scope.fieldsTosave["nombre_del_cliente"] = $scope.$rootScope.clientInfo.name;

            $scope.fieldsTosave["valor_del_inmueble"] = $scope.datos1.monto;
            $scope.fieldsTosave["cuota_inicial"] = $scope.datos1.cuotaInicial;
            $scope.fieldsTosave["valor_leasing_o_credito_hipotecario"] = $scope.datos1.Leasing;
            $scope.fieldsTosave["plazo_en_meses"] = $scope.datos1.plazomeses;
            $scope.fieldsTosave["opcion_de_compra"] = $scope.datos1.opciondecomprapor;
            $scope.fieldsTosave["opcion_de_compra_t"] = (( moneyInt($scope.datos1.Leasing) * parseFloat($scope.datos1.opciondecomprapor)) /100).formatMoney();
            $scope.fieldsTosave["cuota_sin_seguros"] = $scope.datos4.cuotaSnseguro ;
            $scope.fieldsTosave["tipo_tasa"] = Tipotasa;
            $scope.fieldsTosave["d_t_f_t_a"] = $scope.datos2.dtfta;
            $scope.fieldsTosave["d_t_f__+"] = $scope.datos2.DTF;
            $scope.fieldsTosave["tasa_e_a"] = $scope.datos2.tasaEA;
            $scope.fieldsTosave["tasa_m_v"] = $scope.datos2.tasaMV;
            $scope.fieldsTosave["tasa_fija"] = $scope.datos3.tasafija;
            $scope.fieldsTosave["tasa"] = $scope.datos3.tasa;
            $scope.fieldsTosave["vivienda_protegida"] = $scope.datos3.viendaprotegida;
            $scope.fieldsTosave["vida_deudor"] = $scope.datos4.vidadeudor;
            $scope.fieldsTosave["incendio"] = $scope.datos4.incendio;
            $scope.fieldsTosave["cuota_protegida"] = $scope.datos3.cuotapreotegida;

            $scope.fieldsTosave["total_cuota_mensual_+_seguros"] = $scope.totalcuotaMesSeguro;

            mixpanel.track("Cotizacion Usuario",{
              "tipo": $rootScope.title,
              "user": $rootScope.user.data.name,
              "email": $rootScope.user.data.email,
              "cliente": $scope.clientInfo.name+" "+$scope.clientInfo.lastName,
              "cliente email": $scope.clientInfo.mail
            });

            $rootScope.load = true;
            var registro = Registro;
            $scope.registro = registro;
            $scope.registro.save({
              "IDUs": $rootScope.user.data.id,
              "IDCa": 3,
              "Keys": JSON.stringify( $scope.fieldsTosave )
            }).then(function(r) {
              $idnewPost = r.data.split("|")[1];
              $scope.idnewPost = $idnewPost;
                $rootScope.load = false;
            }, function(error) {

            });

            console.log($rootScope);
          }
        }
        $scope.alert.show = false;
      } else {
        $scope.alert.msgAlert = "Todos los campos son requeridos";
        $scope.alert.show = true;
        $rootScope.alert.check = false;
      }
    };


    $scope.finalizar = function () {
      $state.go('Consultor');
    };
    $scope.listaCotizaciones = [];
    $scope.getPostByID = function($id){
      $scope.registro.getPostByID({
        "idPost": $idnewPost,
      }).then(function(r) {
        $scope.listaCotizaciones.unshift(r.data[0]);

        $scope.detailsOpen(0);
        $scope.mailclient();
        $rootScope.okmail();

        $rootScope.load = false;
      }, function(error) {

      });
    }

    $scope.sendmailCotizacion = function(){
      $rootScope.load = true;
      $scope.getPostByID();
    };







    $rootScope.newCotiuser = function () {
      $rootScope.clientInfo = {
        lastName: $scope.clientInfo.lastName,
        mail: $scope.clientInfo.mail,
        cell: $scope.clientInfo.cell,
        name: $scope.clientInfo.name
      }
      angular.element(".a-return").show();
      $state.go("Consultor.tipoPrestamo");
    };
    $scope.registrosUpdate = function(Estado) {
      console.log(Estado);
      console.log($scope.idnewPost);
      $rootScope.load = true;
      $scope.registro.update({
        // "IDUs": 1,
        "IDUs": $rootScope.user.data.id,
        "IDPost": $scope.idnewPost,
        "estado": Estado
      }).then(function(r) {
        $rootScope.load = false;
        $scope.finalizar();
      }, function(error) {
        console.log(error);
      });
    };















  function remove_character(k){
    if(typeof k == "string" ){
      k = k.replaceAll("_"," ");
      k = k.slice(0, 1).toUpperCase() + k.slice(1);
    }
    return k;
  }
  $scope.getUsersMail = function() {
    $rootScope.load = true;
    $scope.registro.getUsers({
      "IDUs": $scope.datosPrestamoSeleted.post_author,
    }).then(function(r) {
      $scope.sendMail();
    }, function(error) {

    });
  };
  $scope.sendMail = function(){
    $scope.mailObject = {
      asesor: $scope.user,
      cliente: $scope.datosPrestamoSeleted.PersonalArray,
      head: {
        titulo1: "Resultados",
        titulo2: $scope.datosPrestamoSeleted.category
      },
      rows: $scope.datosPrestamoSeleted.fieldsArray
    };
    console.log($scope.mailObject);
    $scope.registro.mail({
      "datosTabla": JSON.stringify( $scope.mailObject ),
    }).then(function(r) {
      console.log(r);
      $rootScope.load = false;
    }, function(error) {
      console.log(error);
      $rootScope.load = false;
    });
  }
  $scope.mailclient = function() {
    $scope.sendMail();
    mixpanel.track("Envio de correo Usuario",{
      "user": $rootScope.user.data.name,
      "email": $rootScope.user.data.email,
      "cliente": $scope.datosPrestamoSeleted.PersonalArray[0].value+" "+$scope.datosPrestamoSeleted.PersonalArray[1].value,
      "cliente email": $scope.datosPrestamoSeleted.PersonalArray[2].value
    });
  };

  $scope.historialSelect = 0;
  $scope.detailsOpen = function ($index) {
    $scope.details = true;
    $scope.datosPrestamoSeleted = $scope.listaCotizaciones[$index];
    $scope.historialSelect = $index;

    $rootScope.titleResultados = $scope.datosPrestamoSeleted.category;

    $scope.datosPrestamoSeleted.fieldsArray = [];
    $scope.datosPrestamoSeleted.PersonalArray = [];
    $scope.datosPrestamoSeleted.summaryArray = [];

    $scope.datosPrestamoSeleted.summaryArray[0] = {};
    $scope.datosPrestamoSeleted.summaryArray[0].data = [];
    $scope.datosPrestamoSeleted.summaryArray[1] = {};
    $scope.datosPrestamoSeleted.summaryArray[1].data = [];
    $scope.datosPrestamoSeleted.summaryArray[2] = {};
    $scope.datosPrestamoSeleted.summaryArray[2].data = [];

    for(var k in $scope.datosPrestamoSeleted.fields){
      var d = $scope.datosPrestamoSeleted.fields[k];
      if( k.trim() != "_edit_lock" ){
        if( k.trim() == "apellido_del_cliente" ||
            k.trim() == "celular_del_cliente" ||
            k.trim() == "nombre_del_cliente" ||
            k.trim() == "email_del_cliente" ){
          $scope.datosPrestamoSeleted.PersonalArray[$scope.datosPrestamoSeleted.PersonalArray.length] = {
            name: remove_character(k),
            value: d
          }
        }else{
          if( $scope.datosPrestamoSeleted.category == "Préstamo Personal" ){
            if( k.trim() == "cuota" || k.trim() == "cuota_protegida" || k.trim() == "vida" || k.trim() == "cuota_+_vida"  ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "monto" || k.trim() == "edad" || k.trim() == "plazo_meses" || k.trim() == "fecha_desembolso" || k.trim() == "fecha_desembolso" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "DATOS DEL CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "capital" || k.trim() == "intereses" || k.trim() == "seguro_de_vida" || k.trim() == "total_primera_cuota" || k.trim() == "tasa_periodica_m_v" || k.trim() == "equivalencia_tasa_nominal_m_v" || k.trim() == "equivalencia_tasa_efectiva_anual" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguro_cp" || k.trim() == "cuota_protegida" || k.trim() == "prima_seguro_por_millon" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vivienda" ) {
            if( k.trim() == "cuota" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" || k.trim() == "total_cuota_mensual_+_seguros" || k.trim() == "cuota_sin_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: (k.trim() == "vivienda_protegida")?'Vivienda Protegida Contenidos':(k.trim() == "incendio")?'Vivienda Protegida Incendio':(k.trim() == "cuota_protegida")?'Cuota Protegida':(k.trim() == "vida_deudor")?'Vida Deudor':(k.trim() == "cuota_sin_seguros")?'Cuota Sin Seguros':remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "valor_del_inmueble" || k.trim() == "cuota_inicial" || k.trim() == "valor_leasing_o_credito_hipotecario" || k.trim() == "plazo_en_meses" || k.trim() == "opcion_de_compra" || k.trim() == "opcion_de_compra_t" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tipo_tasa" || k.trim() == "d_t_f_t_a" || k.trim() == "d_t_f__+" || k.trim() == "tasa_e_a" || k.trim() == "tasa_m_v" || k.trim() == "tasa_fija" || k.trim() == "tasa" || k.trim() == "vivienda_protegida" || k.trim() == "vivienda_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "TASA DE CRÉDITO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "cuota_sin_seguros" || k.trim() == "vida_deudor" || k.trim() == "incendio" || k.trim() == "vivienda_protegida" || k.trim() == "cuota_protegida" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Tradicional" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo 14 Cuotas" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }else if( $scope.datosPrestamoSeleted.category == "Préstamo de Vehículo Premium" ) {
            if( k.trim() == "total_prestamo" || k.trim() == "cuota_1" || k.trim() == "seguro_de_vida" || k.trim() == "poliza_colectiva" || k.trim() == "tranquilidad_global_val" || k.trim() == "total_cuota_mensual_+_seguros" ){
              $scope.datosPrestamoSeleted.fieldsArray[$scope.datosPrestamoSeleted.fieldsArray.length] = {
                name: remove_character(k),
                value: d
              }
            }else{
              if( k.trim() == "modelo_vehiculo" || k.trim() == "edad_solicitante" || k.trim() == "seguro_poliza_colectiva" || k.trim() == "tranquilidad_global" ){
                $scope.datosPrestamoSeleted.summaryArray[0].title = "MODELO Y SEGURO";
                $scope.datosPrestamoSeleted.summaryArray[0].data[$scope.datosPrestamoSeleted.summaryArray[0].data.length]  = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "monto" || k.trim() == "plazo_meses" || k.trim() == "tasa_lista_concesionario" || k.trim() == "extraprima" || k.trim() == "tipo_de_plan" || k.trim() == "tipo_de_cliente" ){
                $scope.datosPrestamoSeleted.summaryArray[1].title = "MONTO Y PLAZO";
                $scope.datosPrestamoSeleted.summaryArray[1].data[$scope.datosPrestamoSeleted.summaryArray[1].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }else if( k.trim() == "tasa_final_al_cliente" || k.trim() == "monto_extra_cuota_1" || k.trim() == "mes_extra_cuota_1" || k.trim() == "monto_extra_cuota_2" || k.trim() == "mes_extra_cuota_2" || k.trim() == "total_abono_a_capital" || k.trim() == "promedio_abono_capital_con_t_g" || k.trim() == "mes_6" || k.trim() == "mes_9" || k.trim() == "mes_12" || k.trim() == "mes_18" || k.trim() == "mes_24" || k.trim() == "mes_32" || k.trim() == "mes_36" ){
                $scope.datosPrestamoSeleted.summaryArray[2].title = "CUOTA MENSUAL";
                $scope.datosPrestamoSeleted.summaryArray[2].data[$scope.datosPrestamoSeleted.summaryArray[2].data.length] = {
                  name: remove_character(k),
                  value: d
                }
              }
            }
          }
        }
      }
    }

  };


}]);

app.controller('simuladorController', ['$rootScope', '$scope', '$template', 'User', '$state', function($rootScope, $scope, $template, User, $state) {

    $rootScope.title = "simulador de crédito";
    $rootScope.simulador = true;
    $scope.pages.active = false;

    angular.element(".a-return").show();

    $scope.clientInfo = {};

    $scope.next =  function(from){
      if( from.$valid ){
        $rootScope.clientInfo = $scope.clientInfo;
        console.log($rootScope.clientInfo);
        $state.go("Consultor.tipoPrestamo");
        $scope.alert.show = false;
      }else{
        $scope.alert.msgAlert = "Todos los campos son requeridos";
        $scope.alert.show = true;
        $rootScope.alert.check = false;
      }
    }

}]);

app.controller('tiporestamoController', ['$rootScope', '$scope', '$template', 'User', '$state', function($rootScope, $scope, $template, User, $state) {

    $rootScope.title = "simulador de crédito";
    $rootScope.simulador = true;
    $scope.sub = false;
    $rootScope.pagesActive = false;

    $scope.next =  function($i){
      console.log($i);
      if( $i == 1){
        $state.go("Consultor.tipoPrestamo.personal");
      }else if( $i == 2.1 ){
        $state.go("Consultor.tipoPrestamo.vehiculo1");
      }else if( $i == 2.2 ){
        $state.go("Consultor.tipoPrestamo.vehiculo2");
      }else if( $i == 2.3 ){
        $state.go("Consultor.tipoPrestamo.vehiculo3");
      }else if( $i == 3 ){
        $state.go("Consultor.tipoPrestamo.vivienda");
      }
    }

    $scope.opensub = function () {
      $scope.sub = !$scope.sub;
    }

}]);

app.factory('appSettings', ['$api', '$q', function($api, $q) {
    var appSettings = {
        fetch: function(d) {
            var deferred = $q.defer();
            $api.post('/Configuracion/consultarConfiguracion', d)
            .then(
                function(response) {
                        appSettings.data = response.data;
                        deferred.resolve(appSettings.data);
                    },
                    function(error) {
                        appSettings.data = error;
                        deferred.reject(appSettings.data);
                    });
            return deferred.promise;
        },

    };
    return appSettings;
}]);

// Interceptador usado para cambiar los encabezados o configuraciones de las
// consultas al API
// útil para enviar enviar y recibir tokens (sesiones de usuario)
app.factory('GeneralHttpInterceptor', function() {
    return {
        // optional method
        request: function(config) {
            // do something on success
            return config;
        },
        // optional method
        response: function(response) {
            // do something on success
            return response;
        }
    };
});

// Servicio User que se encarga de la sesión de usuario
app.factory('NotificacionesPush', ['$api', '$q', '$state', function($api, $q, $state, Session) {
  var NotificacionesPush = {
    // En @data se almacena el objeto que devuelve el API
    data: null,
    send: function(data) {
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/autoSaveIdDevices.php', data)
        .then(function(response) {
            NotificacionesPush.data = response.data;
            deferred.resolve(NotificacionesPush.data);
          },
          // Si el servidor tiene algún error en el proceso
          function(error) {
            NotificacionesPush.data = error;
            deferred.reject(NotificacionesPush.data);
          });
      return deferred.promise;
    }
  };
  return NotificacionesPush;
}]);

// Servicio User que se encarga de la sesión de usuario
app.factory('PagesStatic', ['$api', '$q', '$state', function($api, $q, $state, Session) {
  var PagesStatic = {
    // En @data se almacena el objeto que devuelve el API
    data: null,
    get: function(data) {
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/getPages.php', data)
        .then(function(response) {
            PagesStatic.data = response.data;
            deferred.resolve(PagesStatic.data);
          },
          // Si el servidor tiene algún error en el proceso
          function(error) {
            PagesStatic.data = error;
            deferred.reject(PagesStatic.data);
          });
      return deferred.promise;
    }
  };
  return PagesStatic;
}]);

// Servicio User que se encarga de la sesión de usuario
app.factory('Registro', ['$api', '$q', '$state', function($api, $q, $state, Session) {
  var Registro = {
    // En @data se almacena el objeto que devuelve el API
    data: null,
    status: null,
    updateData: null,
    maildata: null,
    getPostByIDData: null,
    get: function(data) {
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/getPosts.php', data)
        .then(function(response) {
            Registro.data = response.data;
            deferred.resolve(Registro.data);
          },
          function(error) {
            Registro.data = error;
            deferred.reject(Registro.data);
          });
      return deferred.promise;
    },
    save: function(data) {
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/makePosts.php', data)
        .then(function(response) {
            Registro.status = response;
            deferred.resolve(Registro.status);
          },
          function(error) {
            Registro.status = error;
            deferred.reject(Registro.status);
          });
      return deferred.promise;
    },
    update: function(data) {
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/update_state.php', data)
        .then(function(response) {
            Registro.updateData = response;
            deferred.resolve(Registro.updateData);
          },
          function(error) {
            Registro.updateData = error;
            deferred.reject(Registro.updateData);
          });
      return deferred.promise;
    },
    mail: function(data) {
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/mailClient.php', data)
        .then(function(response) {
            Registro.maildata = response;
            deferred.resolve(Registro.maildata);
          },
          function(error) {
            Registro.maildata = error;
            deferred.reject(Registro.maildata);
          });
      return deferred.promise;
    },
    getUsers: function(data){
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/getUsers.php', data)
        .then(function(response) {
            Registro.usersData = response;
            deferred.resolve(Registro.usersData);
          },
          function(error) {
            Registro.usersData = error;
            deferred.reject(Registro.usersData);
          });
      return deferred.promise;
    },
    getPostByID: function(data){
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/getPostByid.php', data)
        .then(function(response) {
            Registro.getPostByIDData = response;
            deferred.resolve(Registro.getPostByIDData);
          },
          function(error) {
            Registro.getPostByIDData = error;
            deferred.reject(Registro.getPostByIDData);
          });
      return deferred.promise;
    },
  };
  return Registro;
}]);

// Servicio seccion que se usa para validar la seccion de un usuario
app.factory('Session', ['$state', '$api', '$q', function($state, $api, $q) {
  // cifrado de los datos
  var encodeData = function(data) {
    for (var i = 0; i < 5; i++) {
      data = Base64.encode(data);
    }
    return data;
  };
  // decifrado de los datos
  var decodeData = function(data) {
    for (var i = 0; i < 5; i++) {
      data = Base64.decode(data);
    }
    return data;
  };
  var Session = {
    create: function(data) {
      // Colocar timpo en la cookie
      var now = new Date();
      //Datos de la cookie
      var Cdata = {
        data: data
      };
      // Datos para la creacion de la cookie
      var time = now.getTime();
      var hours = 3;
      var expireTime = time + (60 * 60 * hours * 1000);
      expireTime = new Date(expireTime);
      expireTime = expireTime.toGMTString();
      // encode y pasar a string el obj
      Cdata = encodeData(JSON.stringify(Cdata));
      // Crear la cookie
      var cookie = 'identity=' + Cdata + '; expires=' + expireTime + ';';
      document.cookie = cookie;
    },
    isValid: function(){
      var parsed = false;
      var identity = Session.getCookieData(parsed);
      return (identity !== false);
    },
    getCookieData: function(parsed){
      // recuperar valor de la cookie
      var cookie = document.cookie;
      if (cookie === "" || cookie === null || cookie === undefined) {
        return false;
      }
      var cookieVars = cookie.trim().replace(" ", "").split(';');
      var identity;
      for (var i = 0; i < cookieVars.length; i++) {
        var item = cookieVars[i];
        var n = item.indexOf("=");
        var p1 = item.substring(0, n);
        var p2 = item.substring(n + 1, item.length);
        p1 = p1.trim();
        p2 = p2.trim();
        if (p1 == 'identity') {
          identity = p2;
        }
      }
      if(identity === undefined) return false;
      if(parsed){
        var obj = {};
        identity = decodeData(identity);
        identity = JSON.parse(identity);
        angular.forEach(identity, function(v,k){
          //if(k === 'idUser' || k === 'pwUser') v = decodeData(v);
          obj[k] = v;
        });
        obj = (obj.data === '')? false : obj;
        return obj;
      }
    },
    destroy: function() {
        var cookie = 'identity=; expires=Thu, 01 Jan 1970 00:00:00 GMT';
        document.cookie = cookie;
      }
      // Crear todos los métodos que sean necesarios...
  };
  return Session;
}]);

// Servicio User que se encarga de la sesión de usuario
app.factory('User', ['$api', '$q', '$state', function($api, $q, $state) {
  var User = {
    data: null,
    dataChange: null,
    validateData: null,
    forgotData: null,
    login: function(data) {
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/loginApp.php', data)
        .then(function(response) {
            // Si hay algo en response.data.Mensaje (del API) quiere decir que hay un error
            if (response.data.Mensaje) {
              User.data = response.data.Mensaje;
              deferred.reject(User.data);
            } else {
              // Todo OK entonces devuelve response.data y me actualiza la variable del servicio User
              User.data = response.data;
              deferred.resolve(User.data);
            }
          },
          // Si el servidor tiene algún error en el proceso
          function(error) {
            User.data = error;
            deferred.reject(User.data);
          });
      return deferred.promise;
    },
    validatePass: function(data) {
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/loginApp.php', data)
        .then(function(response) {
            User.validateData = response;
            deferred.resolve(User.validateData);
          },
          // Si el servidor tiene algún error en el proceso
          function(error) {
            User.data = error;
            deferred.reject(User.data);
          });
      return deferred.promise;
    },
    changePass: function(data){
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/changePass.php', data)
        .then(function(response) {
            User.dataChange = response;
            deferred.resolve(User.dataChange);
          },
          // Si el servidor tiene algún error en el proceso
          function(error) {
            User.dataChange = error;
            deferred.reject(User.dataChange);
          });
      return deferred.promise;
    },
    sendforget: function(data){
      var deferred = $q.defer(); // Para entender los Diferidos ver "../services/api.js"
      $api.post('/wp-services/forgetPass.php', data)
        .then(function(response) {
            User.forgotData = response;
            deferred.resolve(User.forgotData);
          },
          // Si el servidor tiene algún error en el proceso
          function(error) {
            User.forgotData = error;
            deferred.reject(User.forgotData);
          });
      return deferred.promise;
    },
    validate: function() {

    },
    logout: function() {

    }
  };
  return User;
}]);

// Directiva para hacer los bloques con precargador para
// cuando se hacen consultas al API.
// Usar con atributos HTML: <... api-preload="" ...>
// Recibe un atributo, el cual es la URL del endpoint de la API que identifica el
// bloque con el servicio del API que se consume.
// Ej: <div class="formulario-login" api-preload="/UrlDelServicioDeLogin">
app.directive('apiPreload', ['$http', '$api', function($http, $api) {
    return {
        restrict: 'A',
        link: function(scope, elm, attrs) {

            scope.apiIsLoading = function() {
                return $http.pendingRequests.length > 0 && attrs.apiPreload == $api.lastEndpoint;
            };
            scope.$watch(scope.apiIsLoading, function(v) {
                if (v) {
                    $(elm).addClass('apiIsLoading');
                } else {
                    $(elm).removeClass('apiIsLoading').children().hide().fadeIn(400);
                }
            });
        },
    };

}]);
// Crear más directivas que tengan que ver con Precargadores especiales si fuese necesario
// ...

// Todos las directivas para plugins de JQuery
// ===========================================================
app.directive('ngInputlabel', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      var $el = $(element);
      $el.children('label').on('click', function(event) {
        $(this).hide();
        $(this).next().focus();
      });
      $el.children('input').on('focusout', function(event) {
        if( $(this).val().length == 0 ){
          $(this).prev().show();
        }
      });
      $el.children('input').on('focusin', function(event) {
        $(this).prev().hide();
      });
    }
  };
});

app.directive('ngDate', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      $.datepicker.regional['es'] = {
      closeText: 'Cerrar',
      prevText: '<Ant',
      nextText: 'Sig>',
      currentText: 'Hoy',
      monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
      monthNamesShort: ['Ene','Feb','Mar','Abr', 'May','Jun','Jul','Ago','Sep', 'Oct','Nov','Dic'],
      dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
      dayNamesShort: ['Dom','Lun','Mar','Mié','Juv','Vie','Sáb'],
      dayNamesMin: ['Do','Lu','Ma','Mi','Ju','Vi','Sá'],
      weekHeader: 'Sm',
      firstDay: 1,
      isRTL: false,
      showMonthAfterYear: false,
      yearSuffix: ''
      };
      $.datepicker.setDefaults($.datepicker.regional['es']);
      $(element).on('focus focusin click touchstart', function(event) {
        window.ionic.keyboard.hide();
        setTimeout(function(){
          window.cordova.plugins.Keyboard.close();
        },100);
      });
      $(element).inputmask("99/99/9999");
      $(element).datepicker({
        autoSize: true,
        dateFormat: 'dd/mm/yy',
        beforeShow: function ($var) {
          setTimeout(function () {
            $("#ui-datepicker-div").css({"left": "", "right":"10px"});
          },100);
        }
      });
    }
  };
});


app.directive('ngFournumbers', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      Inputmask.extendDefaults({
      'autoUnmask': false, 'rightAlign': false, 'showMaskOnHover': false, 'showMaskOnFocus': false, 'showTooltip': true
      });
      $(element).inputmask("9999");
    }
  };
});

app.directive('ngTwonumbers', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      Inputmask.extendDefaults({
      'autoUnmask': false, 'rightAlign': false, 'showMaskOnHover': false, 'showMaskOnFocus': false, 'showTooltip': true
      });
      $(element).inputmask("99");
    }
  };
});

app.directive('ngMoney', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      Inputmask.extendDefaults({
      'autoUnmask': false, 'rightAlign': false, 'showMaskOnHover': false, 'showMaskOnFocus': false, 'showTooltip': true
      });
      $(element).on("keyup keypress focusout", function(){
        var v = $(this).val();
        $(this).val(v);
        $(this).trigger('change');
      });
      $(element).inputmask("numeric", {
        radixPoint: ",",
        groupSeparator: ".",
        digits: 2,
        autoGroup: true,
        prefix: '$',
        rightAlign: false
      });
    }
  }
});


app.directive('ngPercent', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      Inputmask.extendDefaults({
      'autoUnmask': false, 'rightAlign': false, 'showMaskOnHover': false, 'showMaskOnFocus': false, 'showTooltip': true
      });
      $(element).on("keyup keypress focusout", function(){
        $(this).trigger('change');
      });
      $(element).inputmask("numeric", {
        radixPoint: ".",
        digits: 2,
        autoGroup: true,
        suffix: '%',
        rightAlign: false
      });
    }
  }
});

app.directive('ngNumeric', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      $(element).on("keyup keydown keypress",function(){
        this.value = this.value.replace(/[^\d\.\-]/g,'');
      });
    }
  }
});

app.directive('ngSl', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      var $el = $(element);
      var t = $el.find('li').first().text();

      $el.addClass('ngSl');
      $el.find('span').text(t);
      $el.find('ul').hide();
      $el.find('li').first().hide();

      $("body").on('click', function(event) {
        if( $(event.target).parents('.ngSl').length == 0 ){
          $(".ngSl.active").removeClass("active").children('ul').hide();
        }
      });

      $el.find('span').on('click', function(event) {
        var $p = $(this).parent();
        $(".ngSl.active").not($p).removeClass("active").children('ul').hide();
        if( $p.attr("class").split(" ").indexOf("active") != -1 ){
          console.log(2);
          $p.removeClass('active');
          $(this).siblings('ul').hide();
        }else{
          console.log(3);
          $p.addClass('active');
          $(this).siblings('ul').show();
        }
      });

      $el.find('li').on('click', function(event) {
        var t = $(this).text();
        $(this).parent().siblings('span').text(t);
        $(this).parent().hide();
        $(this).hide().siblings().show();
        $(this).parent().parent().removeClass('active');
      });
    }
  };
});



app.directive('ngMonth', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      var month = [
        'ENERO',
        'FEBRERO',
        'MARZO',
        'ABRIL',
        'MAYO',
        'JUNIO',
        'JULIO',
        'AGOSTO',
        'SEPTIEMBRE',
        'OCTUBRE',
        'NOVIEMBRE',
        'DICIEMBRE'
      ];
      var html  = "<span></span><ul>";
      for(var i = 0; i < month.length; i++){
        html += "<li ng-click='datos2.tipoPlan = '" + month[i] + "' ' >"+ month[i] +"</li>";
      }
      html += "</ul>";
      $(element).append(html);
    }
  }
});




app.directive('ngDialigboxoptions', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      $(element).addClass('ngDialigboxOptions').siblings('.m-tooltip').hide();
      $(element).on('click', function(event) {
        $(this).siblings('.m-tooltip').toggle();
        $(this).toggleClass('active');
        $(".ngDialigboxOptions").not($(this)).removeClass('active').siblings('.m-tooltip').hide();
      });
      $('.m-tooltip').find('li').on('click',function(event) {
        $(this).parents(".m-tooltip").hide();
        $(this).parents(".m-tooltip").siblings('.ngDialigboxOptions').removeClass('active');
      });
      $("body").on('click', function(event) {
        if( $(event.target).parents('.-buttons ').length == 0 ){
          $(".m-tooltip").hide();
          $(".m-tooltip").siblings('.ngDialigboxOptions').removeClass("active");
        }
      });
    }
  }
});


// app.directive('ngNumberfake', function() {
//   return {
//     restrict: 'A',
//     link: function(scope, element, attrs) {
//     //   $(element).on('focus focusin', function(event) {
//     //     var v = $(this).val();
//     //     v = ( v.slice(0,1) == "$" ) ? parseFloat(v.slice(1).replaceAll(".","")) : v;
//     //     $(".active-now").removeClass("active-now");
//     //     $(this).addClass('active-now');
//     //     $("#fakeInput").val(v);
//     //     // $("#fakeInput").trigger('focus');
//     //     window.cordova.plugins.Focus.focus($("#fakeInput"));
//     //   });
//     }
//   }
// });

// app.directive('ngInputfake', function() {
//   return {
//     restrict: 'A',
//     link: function(scope, element, attrs) {
//       // $(element).on('focus focusout', function(event) {
//       //   $(".active-now").trigger('change');
//       //   $("input").trigger('change');
//       // });
//     }
//   }
// });



app.directive('ngScrolldown', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      $(element).on('scroll', function(event) {
        var h = $(this).children().height();
        var s = $(this).scrollTop() + $(window)[0].innerHeight - $(".o-main-header .a-title").outerHeight(true);
        if( h < s ){
          scope.$parent.scrollDown(angular.element(element));
        }
      });
    }
  }
});


app.directive('ngProloadimg', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      var t = $(this).children().length - 1;
      $(element).children('img').on('load', function(event) {
        $(this).remove();
        if( $(this).index() == t ){
          $(this).parent().remove();
        }
      });
    }
  }
});



app.directive('input', function() {
  return {
    restrict: 'E',
    link: function(scope, element, attrs) {
      setTimeout(function(){
        setTimeout(function(){
          scope.$apply();
        },200);
        $(element).on('keyup change focusout', function(event) {
          setTimeout(function(){
            scope.$apply();
          },200);
        });
      },1);
    }
  }
});



app.directive('ngLimit72', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      $(element).on('keyup', function(event) {
        var $this = $(this);
        var v = $this.val();
        if( parseInt(v) > 72 ){
          $this.val(72);
        }
      });
    }
  }
});

app.filter('to_trusted', ['$sce', function($sce){
    return function(text) {
        return $sce.trustAsHtml(text);
    };
}]);

// Servicio que controla todos los requests y responses del API en general
// Este servicio es el que usan los Factories (y servicios) específicos como User, Alumno, Rotaciones, etc...
app.service('$api', ['$http', '$q', 'config', function($http, $q, config) {
    // Almacena la dirección del servicio de la ultima consulta al API
    this.lastEndpoint = null;
    // Método para las consultas POST exclusivamente
    // @endpoint es la URL del Servicio del API, ver Swagger docs del API
    // @data es lo que se envía al API en el request
    this.post = function(endpoint, data) {
        var port = ( config.port === 1 ) ? "" : ":"+config.port;
        var path = config.path;
        var url = config.url + port + path;
        var headers = config.headers;
        // Objeto para diferir las respuestas del API
        var deferred = $q.defer();
        this.lastEndpoint = endpoint;
        $http.post( url + endpoint, data, headers).then(function(response) {
            // Si todo OK, retorna response
            deferred.resolve(response);
        }, function(error) {
            // Si retorna error
            deferred.reject(error);
        });
        // Devuelve la respuesta al objeto instanciado
        return deferred.promise;
    };
}]);

// Servicio que controla lo relacionado a la plantilla del app en general
app.service('$template', ['$state', function($state) {
    // Devuelve el Encabezado HTML correcto
    this.header = function() {
        return $state.current.name !== 'login' ? 'templates/header.html' : 'templates/header-login.html';
    };
    // Devuelve el footer
    this.footer = function() {
        return 'templates/footer.html';
    };
    // devuelve el header de las páginas internas
    this.pageHeader = function() {
        return 'templates/page-header.html';
    };
    // Para validar desde los controlllers si es Desktop
    this.isDesktop = function() {
        return ($(window).width() >= 768);
    };
    // Para validar desde los controlllers si es Mobile
    this.isMobile = function() {
        return ($(window).width() < 768);
    };
}]);
